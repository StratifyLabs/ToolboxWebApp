[{"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js":"1","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js":"2","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js":"3","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js":"4","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js":"5","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Histogram.js":"6","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/ProgramCounterSamplePlot.js":"7","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Log.js":"8","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/LogEntry.js":"9","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Table.js":"10","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Plot.js":"11","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js":"12","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Terminal.js":"13","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Logic.js":"14","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Theme.js":"15","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js":"16"},{"size":500,"mtime":1608776256516,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1608776256517,"results":"19","hashOfConfig":"18"},{"size":1451,"mtime":1609384321197,"results":"20","hashOfConfig":"18"},{"size":388,"mtime":1609384415674,"results":"21","hashOfConfig":"18"},{"size":4552,"mtime":1609378926979,"results":"22","hashOfConfig":"18"},{"size":1365,"mtime":1609358827469,"results":"23","hashOfConfig":"18"},{"size":1640,"mtime":1609017060943,"results":"24","hashOfConfig":"18"},{"size":869,"mtime":1608843972864,"results":"25","hashOfConfig":"18"},{"size":570,"mtime":1608844115870,"results":"26","hashOfConfig":"18"},{"size":3368,"mtime":1609361239492,"results":"27","hashOfConfig":"18"},{"size":1573,"mtime":1609201204486,"results":"28","hashOfConfig":"18"},{"size":966,"mtime":1609383811831,"results":"29","hashOfConfig":"18"},{"size":434,"mtime":1609378862154,"results":"30","hashOfConfig":"18"},{"size":3211,"mtime":1609371989915,"results":"31","hashOfConfig":"18"},{"size":5847,"mtime":1609372082453,"results":"32","hashOfConfig":"18"},{"size":1021,"mtime":1609384150753,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1r4for7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js",[],["76","77"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js",["78","79","80","81","82","83","84"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js",["85","86","87","88","89","90","91","92"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js",["93","94","95","96","97"],"import React from 'react'\nimport { Badge } from 'react-bootstrap'\n\nimport Terminal from '../components/debug/Terminal'\nimport Plot from '../components/debug/Plot'\nimport Logic from '../components/debug/Logic'\nimport Histogram from '../components/debug/Histogram'\nimport ProgramCounterSamplePlot from '../components/debug/ProgramCounterSamplePlot'\nimport Log from '../components/debug/Log'\nimport Table from '../components/debug/Table'\n\n\nconst Debug = props => {\n\n  const [dataList, setDataList] = React.useState({});\n  const [configuration, setConfiguration] = React.useState({});\n  const [incoming, setIncoming] = React.useState(\"\");\n\n  const [serverStatus, setServerStatus] = React.useState(\"danger\")\n\n  function processData(dataName, value, configurationNext) {\n    const dataItem = dataList[dataName];\n    if (dataItem !== undefined && dataItem.configurations !== undefined) {\n      //add the input to each output\n      dataItem.configurations.forEach((configurationName, index) => {\n        if (configurationNext[configurationName] !== undefined && configurationNext[configurationName].data[dataName] !== undefined) {\n          configurationNext[configurationName].data[dataName].push(value);\n        }\n      })\n    }\n  }\n\n  function processConfig(configurationName, item, configurationNext, dataListNext) {\n    //make sure item is valid\n    if (item.data !== undefined && item.type !== undefined) {\n      //item type must be plot, hist, log, raw, etc\n      if (configurationNext[configurationName] === undefined) {\n        configurationNext[configurationName] = item;\n      }\n\n      //now associate the data with the configuration in the data list\n      const dataKeys = Object.keys(item.data);\n      dataKeys.forEach((dataName, index) => {\n        if (dataListNext[dataName] === undefined) {\n          dataListNext[dataName] = {\n            configurations: [configurationName]\n          }\n        } else {\n          let configurationList = dataListNext[dataName].configurations;\n          if (configurationList.indexOf(configurationName) < 0) {\n            configurationList.push(configurationName);\n          }\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    console.log(\"create new event source\");\n    const source = new EventSource(`${props.server}/terminal`);\n\n    source.onopen = function(event){\n      setServerStatus(\"success\");\n    }\n\n    source.onmessage = function (event) {\n      setIncoming(String(event.data));\n    }\n\n    source.onError = function (error) {\n      setServerStatus(\"danger\");\n      source.close();\n    }\n\n    return () => {\n      setServerStatus(\"danger\");\n      console.log(\"cleanup event source\");\n      source.close();\n    }\n\n  }, [])\n\n  React.useEffect(() => {\n    const lines = String(incoming).split(\"\\n\");\n\n    let configurationNext = Object.assign({}, configuration);\n    let dataListNext = Object.assign({}, dataList);\n\n    function processItem(item) {\n      const keys = Object.keys(item);\n\n      keys.forEach((key) => {\n        if (item[key].type !== undefined) {\n          processConfig(key, item[key], configurationNext, dataListNext);\n        } else {\n          processData(key, item[key], configurationNext);\n        }\n      });\n\n    }\n\n    lines.forEach((item, index) => {\n      if (item.length > 0) {\n        try {\n          const value = JSON.parse(item);\n          if (Array.isArray(value)) {\n            value.forEach((item, index) => {\n              processItem(item);\n            })\n          } else {\n            processItem(value);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n\n      }\n    })\n\n    setDataList(dataListNext);\n    setConfiguration(configurationNext);\n\n  }, [incoming])\n\n  return (\n    <div>\n      <h2>Debug Output</h2>\n      <Badge pill variant={serverStatus} className=\"mr-2\">Server: {props.server === \"\" ? \"NA\" : props.server}</Badge>\n      <hr />\n      <small>demo.elf 20201223</small>\n      {\n        Object.keys(configuration).map((key, index) => {\n          if (configuration[key].type === \"plot\") {\n            return <Plot name={key} configuration={configuration[key]} key={\"plot\" + key} />\n          }\n          if (configuration[key].type === \"terminal\") {\n            return <Terminal name={key} configuration={configuration[key]} key={\"raw\" + key} />\n          }\n          if (configuration[key].type === \"logic\") {\n            return <Logic name={key} configuration={configuration[key]} key={\"logic\" + key} />\n          }\n        })\n      }\n\n      <Log type=\"message\" />\n      <Table />\n    </div >\n  )\n}\n\nexport default Debug\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Histogram.js",["98","99","100","101","102","103","104","105"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport { VictoryChart, VictoryZoomContainer, VictoryLine, VictorHistogram, VictoryHistogram } from \"victory\";\n\nimport Theme from '../Theme'\n\n\nconst Histogram = props => {\n\n  const [count, setCount] = React.useState(0)\n\n  const temperatureData =\n    [\n      { x: 20 },\n      { x: 21 },\n      { x: 22 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 25 },\n      { x: 25 },\n      { x: 25 },\n      { x: 24 },\n      { x: 23 },\n      { x: 19 },\n      { x: 15 },\n      { x: 16 },\n      { x: 14 },\n      { x: 27 },\n      { x: 27 },\n      { x: 27 },\n      { x: 16 },\n      { x: 30 },\n      { x: 14 }\n    ];\n\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Header className=\"flex\">Histogram: Temperature <Button className=\"float-right btn-sm\">Reset</Button></Card.Header>\n      <Card.Body>\n        <VictoryChart\n          theme={Theme}\n        >\n          <VictoryHistogram\n            data={temperatureData}\n          />\n\n        </VictoryChart>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Histogram\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/ProgramCounterSamplePlot.js",["106"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { VictoryChart, VictoryZoomContainer, VictoryBar, VictoryLabel } from \"victory\";\n\nconst ProgramCounterSamplePlot = props => {\n  const data = React.useMemo(\n    () => [\n\n      { x: 'main', y: 50 },\n      { x: 'set_led', y: 2 },\n      { x: 'plotx', y: 30 },\n      { x: 'ploty', y: 12 },\n      { x: 'calc', y: 20 },\n      { x: 'get', y: 64 },\n      { x: 'set', y: 22 },\n      { x: 'run', y: 12 },\n      { x: 'run1', y: 12 },\n      { x: 'run2', y: 20 },\n      { x: 'run3', y: 105 },\n      { x: 'run4', y: 12 },\n      { x: 'run5', y: 40 },\n      { x: 'run6', y: 13 },\n      { x: 'run7', y: 12 },\n      { x: 'run8', y: 12 },\n      { x: 'run9', y: 12 },\n      { x: 'run10', y: 20 },\n      { x: 'run11', y: 99 },\n      { x: 'run12', y: 12 },\n      { x: 'run13', y: 40 },\n      { x: 'run14', y: 13 },\n      { x: 'run15', y: 12 }\n    ],\n    []\n  )\n\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Header className=\"flex\">Program Counter Samples <Button className=\"float-right btn-sm\">Reset</Button></Card.Header>\n      <Card.Body>\n        <VictoryChart domainPadding={{ y: 10 }}\n          containerComponent={\n            <VictoryZoomContainer\n              zoomDimension={\"x\"}\n            />\n          }\n        >\n          <VictoryBar\n            labels={({ datum }) => datum.x}\n            labelComponent={<VictoryLabel dx={2} dy={5} angle={-90} textAnchor=\"start\" />}\n            barRatio={0.95}\n            data={data} />\n        </VictoryChart>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default ProgramCounterSamplePlot\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Log.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/LogEntry.js",["107"],"import React from 'react'\nimport { Badge } from 'react-bootstrap'\n\nconst LogEntry = props => {\n\n  var variant;\n  var label;\n  if (props.type === \"debug\") {\n    variant = \"dark\"\n  } else if (props.type === \"info\") {\n    variant = \"info\"\n  } else if (props.type === \"warning\") {\n    variant = \"warning\"\n  } else if (props.type === \"error\") {\n    variant = \"danger\"\n  } else {\n    variant = \"primary\"\n  }\n\n  return (\n    <li>\n      timestamp: {props.text} <Badge pill variant={variant} className=\"float-right\">{props.type}</Badge> \n    </li>\n  )\n}\n\nexport default LogEntry\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Table.js",["108","109","110","111","112"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport {\n  VictoryChart,\n  VictoryZoomContainer,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryAxis,\n  VictoryTooltip,\n  VictoryVoronoiContainer\n} from \"victory\";\nimport Theme from '../Theme'\n\n\nconst Table = props => {\n\n\n  const [zoomDomain, setZoomDomain] = React.useState({ zoomDomain: { x: [] } });\n\n  function handleZoom(domain) {\n    setZoomDomain(domain);\n  }\n\n  const sckData =\n    [\n      { x: -1, y: 0 },\n      { x: 2, y: 1 },\n      { x: 3, y: 0 },\n      { x: 4, y: 1 },\n      { x: 5, y: 0 },\n      { x: 6, y: 1 },\n      { x: 7, y: 0 },\n      { x: 8, y: 1 },\n      { x: 9, y: 0 },\n      { x: 11, y: 0 }\n    ];\n\n  const misoData =\n    [\n      { x: -1, y: 2 },\n      { x: 1.5, y: 2 },\n      { x: 6.5, y: 3 },\n      { x: 7.5, y: 2 },\n      { x: 8.5, y: 3 },\n      { x: 11, y: 3 }\n    ];\n\n  const mosiData =\n    [\n      { x: -1, y: 4 },\n      { x: 2, y: 5 },\n      { x: 3, y: 4 },\n      { x: 6.8, y: 5 },\n      { x: 7, y: 4 },\n      { x: 8, y: 5 },\n      { x: 11, y: 5 }\n    ];\n\n  const csData =\n    [\n      { x: -1, cs: 7 },\n      { x: 2, cs: 6 },\n      { x: 8, cs: 7 },\n      { x: 11, cs: 7 }\n    ];\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Header className=\"flex\">Testing <Button className=\"float-right btn-sm\">Reset</Button></Card.Header>\n      <Card.Body>\n        <VictoryChart domainPadding={{ x: 0, y: 5 }} height={200}\n          theme={Theme}\n          containerComponent={\n\n            <VictoryZoomContainer\n              allowZoom={false}\n              zoomDimension={\"x\"}\n              zoomDomain={zoomDomain}\n              onZoomDomainChange={handleZoom}\n            />\n          }\n        >\n          <VictoryLine\n            labels={({ datum }) => datum.x}\n            labelComponent={<VictoryTooltip />}\n            interpolation={'stepAfter'}\n            data={sckData}\n            style={{\n\n            }} />\n\n          <VictoryLine\n            style={{ data: { stroke: Theme.colors[0] } }}\n            interpolation={'stepAfter'}\n            data={misoData}\n            style={{\n            }} />\n\n\n          <VictoryLine\n            interpolation={'stepAfter'}\n            data={mosiData}\n            style={{\n\n            }} />\n\n          <VictoryLine\n            interpolation={'stepAfter'}\n            data={csData}\n            y={\"cs\"} />\n        </VictoryChart>\n\n        <VictoryChart domainPadding={{ y: 2 }} height={40}\n          theme={Theme}\n          padding={{ top: 5, bottom: 0, left: 25, right: 10 }}\n          containerComponent={\n            <VictoryBrushContainer\n              brushDimension=\"x\"\n              brushDomain={zoomDomain}\n              onBrushDomainChange={handleZoom}\n            />\n          }\n        >\n          <VictoryAxis />\n          <VictoryLine\n            interpolation={'stepAfter'}\n            data={sckData}\n          />\n\n          <VictoryLine\n            interpolation={'stepAfter'}\n            data={misoData}\n          />\n\n          <VictoryLine\n            interpolation={'stepAfter'}\n            data={mosiData}\n          />\n\n          <VictoryLine\n            interpolation={'stepAfter'}\n            data={csData}\n            y={\"cs\"} />\n        </VictoryChart>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Table\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Plot.js",["113","114","115","116","117","118","119","120","121","122","123"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport { VictoryChart, VictoryZoomContainer, VictoryLine, VictoryScatter } from \"victory\";\n\n\nconst Plot = props => {\n\n  const [count, setCount] = React.useState(0)\n\n  const sckData =\n    [\n      { x: -1, y: 0 },\n      { x: 2, y: 1 },\n      { x: 3, y: 0 },\n      { x: 4, y: 1 },\n      { x: 5, y: 0 },\n      { x: 6, y: 1 },\n      { x: 7, y: 0 },\n      { x: 8, y: 1 },\n      { x: 9, y: 0 },\n      { x: 11, y: 0 }\n    ];\n\n  const misoData =\n    [\n      { x: -1, y: 2 },\n      { x: 1.5, y: 2 },\n      { x: 6.5, y: 3 },\n      { x: 7.5, y: 2 },\n      { x: 8.5, y: 3 },\n      { x: 11, y: 3 }\n    ];\n\n  const mosiData =\n    [\n      { x: -1, y: 4 },\n      { x: 2, y: 5 },\n      { x: 3, y: 4 },\n      { x: 6.8, y: 5 },\n      { x: 7, y: 4 },\n      { x: 8, y: 5 },\n      { x: 11, y: 5 }\n    ];\n\n  const csData =\n    [\n      { x: -1, y: 7 },\n      { x: 2, y: 6 },\n      { x: 8, y: 7 },\n      { x: 11, y: 7 }\n    ];\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Header className=\"flex\">Plot: {props.name} <Button className=\"float-right btn-sm\">Reset</Button></Card.Header>\n      <Card.Body>\n        <VictoryChart domainPadding={{ y: 10 }}\n        >\n          { Object.keys(props.configuration.data).map((key, index) => {\n            return <VictoryLine data={props.configuration.data[key]} x={0} y={1} key={\"series\" + key} /> \n          }) }\n        </VictoryChart>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Plot\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js",["124","125"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Terminal.js",["126"],"import React from 'react'\nimport { Container, Card } from 'react-bootstrap'\nimport '../../App.scss';\n\nconst Terminal = props => {\n\n  return (\n    <div>\n    <Card className=\"mb-2\">\n      <Card.Header>printf(): {props.name}</Card.Header>\n      <Card.Body className=\"scroll\">\n        <pre>\n          {String(props.configuration.data.text.join(''))}\n        </pre>\n      </Card.Body>\n    </Card>\n    </div>\n  )\n}\n\nexport default Terminal\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/debug/Logic.js",["127","128","129","130","131"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport {\n  createContainer,\n  VictoryChart,\n  VictoryZoomContainer,\n  VictoryCursorContainer,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryAxis,\n  VictoryLegend\n} from \"victory\";\n\nimport Theme from '../Theme'\n\n\nconst Logic = props => {\n\n  const [zoomDomain, setZoomDomain] = React.useState({ zoomDomain: { x: [] } });\n\n  function handleZoom(domain) {\n    setZoomDomain(domain);\n  }\n\n  const VictoryZoomCursorContainer = createContainer(\"zoom\", \"voronoi\");\n\n  return (\n    <Card className=\"mb-2\">\n      <Card.Header className=\"flex\">Logic Capture <Button className=\"float-right btn-sm\">Reset</Button></Card.Header>\n      <Card.Body>\n      <VictoryChart domainPadding={{ y: 0 }} width={400} height={40}\n          theme={Theme}\n          padding={{ top: 5, bottom: 0, left: 25, right: 10 }}\n          containerComponent={\n            <VictoryBrushContainer\n              brushDimension=\"x\"\n              brushDomain={zoomDomain}\n              onBrushDomainChange={handleZoom}\n            />\n          }\n        >\n          <VictoryAxis style={{ axis: {strokeWidth: 0}}}/>\n          {\n            Object.keys(props.configuration.data).map((key, index) => {\n              return <VictoryLine\n                style={{ data: { stroke: Theme.colors[index] } }}\n                data={props.configuration.data[key]}\n                x={0}\n                y={1}\n                key={\"seriesBrush\" + key}\n                interpolation={'stepAfter'}\n              />\n            })\n          }\n\n        </VictoryChart>\n\n        <VictoryChart\n          theme={Theme}\n          domainPadding={{ y: 10 }} width={400} height={200}\n          padding={{ top: 40, bottom: 30, left: 25, right: 10 }}\n          containerComponent={\n            <VictoryZoomCursorContainer\n              allowZoom={false}\n              allowPan={true}\n              zoomDimension={\"x\"}\n              zoomDomain={zoomDomain}\n              onZoomDomainChange={handleZoom}\n              cursorDimension={\"x\"}\n              labels={({ datum }) => `${datum[0]}`}\n            />\n          }\n        >\n          <VictoryLegend x={100} y={175}\n            centerTitle\n            orientation=\"horizontal\"\n            gutter={20}\n            style={{ background: \"black\", border: { stroke: \"black\" }, title: { fontSize: 12 } }}\n            data={Object.keys(props.configuration.data).map((key, index) => {\n              return { name: key, symbol: { fill: Theme.colors[index], type: \"circle\" } }\n            })}\n          />\n          <VictoryAxis \n          orientation={\"top\"}\n          offsetY={30}\n          \n          />\n          {Object.keys(props.configuration.data).map((key, index) => {\n            return <VictoryLine\n              style={{ data: { stroke: Theme.colors[index] } }}\n              data={props.configuration.data[key]}\n              x={0}\n              y={1}\n              key={\"series\" + key}\n              interpolation={'stepAfter'}\n              name={key}\n            />\n          })}\n\n        </VictoryChart>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Logic\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Theme.js",["132"],"import { assign } from \"lodash\";\n\n// *\n// * Colors\n// *\nconst yellow200 = \"#FFF59D\";\nconst deepOrange600 = \"#F4511E\";\nconst lime300 = \"#DCE775\";\nconst lightGreen500 = \"#8BC34A\";\nconst teal700 = \"#00796B\";\nconst cyan900 = \"#006064\";\nconst blueGrey50 = \"#ECEFF1\";\nconst blueGrey300 = \"#90A4AE\";\nconst blueGrey700 = \"#455A64\";\nconst grey900 = \"#212121\";\nconst colors = [deepOrange600, blueGrey300, lime300, lightGreen500, teal700, cyan900, yellow200];\n// *\n// * Typography\n// *\nconst sansSerif = \"'Helvetica Neue', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 500,\n  height: 100,\n  padding: { top: 5, bottom: 25, left: 25, right: 10}\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize:fontSize,\n  letterSpacing:letterSpacing,\n  padding: 1,\n  fill: blueGrey700,\n  stroke: \"transparent\",\n  strokeWidth: 0\n};\n\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\n\nexport default {\n  colors: colors,\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: grey900\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: blueGrey300,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding,\n          stroke: \"transparent\"\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"transparent\",\n          strokeDasharray,\n          strokeLinecap,\n          strokeLinejoin,\n          pointerEvents: \"painted\"\n        },\n        ticks: {\n          fill: \"transparent\",\n          size: 5,\n          stroke: blueGrey300,\n          strokeWidth: 1,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        tickLabels: assign({}, baseLabelStyles, {\n          fill: blueGrey700\n        })\n      }\n    },\n    baseProps\n  ),\n  polarDependentAxis: assign({\n    style: {\n      ticks: {\n        fill: \"transparent\",\n        size: 1,\n        stroke: \"transparent\"\n      }\n    }\n  }),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          padding,\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        maxLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        median: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        medianLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        min: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        minLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        q1: { padding, fill: blueGrey700 },\n        q1Labels: assign({}, baseLabelStyles, { padding: 3 }),\n        q3: { padding, fill: blueGrey700 },\n        q3Labels: assign({}, baseLabelStyles, { padding: 3 })\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: blueGrey700\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5 })\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: blueGrey700\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  histogram: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          stroke: grey900,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 1\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: assign(\n    {\n      colorScale: colors,\n      style: {\n        data: {\n          padding,\n          stroke: blueGrey50,\n          strokeWidth: 1\n        },\n        labels: assign({}, baseLabelStyles, { padding: 20 })\n      }\n    },\n    baseProps\n  ),\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          opacity: 1,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, baseLabelStyles, { padding: 0, pointerEvents: \"none\" }),\n    flyoutStyle: {\n      stroke: grey900,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: 5,\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n        flyout: {\n          stroke: grey900,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js",["133","134","135","136"],{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":8,"nodeType":"143","messageId":"144","endLine":1,"endColumn":12},{"ruleId":"141","severity":1,"message":"145","line":5,"column":21,"nodeType":"143","messageId":"144","endLine":5,"endColumn":24},{"ruleId":"141","severity":1,"message":"146","line":5,"column":26,"nodeType":"143","messageId":"144","endLine":5,"endColumn":29},{"ruleId":"141","severity":1,"message":"147","line":5,"column":31,"nodeType":"143","messageId":"144","endLine":5,"endColumn":37},{"ruleId":"141","severity":1,"message":"148","line":5,"column":39,"nodeType":"143","messageId":"144","endLine":5,"endColumn":45},{"ruleId":"141","severity":1,"message":"149","line":5,"column":47,"nodeType":"143","messageId":"144","endLine":5,"endColumn":50},{"ruleId":"141","severity":1,"message":"150","line":5,"column":52,"nodeType":"143","messageId":"144","endLine":5,"endColumn":63},{"ruleId":"141","severity":1,"message":"149","line":2,"column":18,"nodeType":"143","messageId":"144","endLine":2,"endColumn":21},{"ruleId":"141","severity":1,"message":"150","line":2,"column":23,"nodeType":"143","messageId":"144","endLine":2,"endColumn":34},{"ruleId":"141","severity":1,"message":"151","line":2,"column":36,"nodeType":"143","messageId":"144","endLine":2,"endColumn":40},{"ruleId":"141","severity":1,"message":"152","line":2,"column":42,"nodeType":"143","messageId":"144","endLine":2,"endColumn":53},{"ruleId":"141","severity":1,"message":"147","line":2,"column":55,"nodeType":"143","messageId":"144","endLine":2,"endColumn":61},{"ruleId":"141","severity":1,"message":"153","line":2,"column":63,"nodeType":"143","messageId":"144","endLine":2,"endColumn":74},{"ruleId":"141","severity":1,"message":"154","line":2,"column":76,"nodeType":"143","messageId":"144","endLine":2,"endColumn":81},{"ruleId":"155","severity":1,"message":"156","line":6,"column":53,"nodeType":"157","endLine":6,"endColumn":95},{"ruleId":"141","severity":1,"message":"158","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":17},{"ruleId":"141","severity":1,"message":"159","line":8,"column":8,"nodeType":"143","messageId":"144","endLine":8,"endColumn":32},{"ruleId":"160","severity":1,"message":"161","line":81,"column":6,"nodeType":"162","endLine":81,"endColumn":8,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":123,"column":6,"nodeType":"162","endLine":123,"endColumn":16,"suggestions":"165"},{"ruleId":"166","severity":1,"message":"167","line":132,"column":53,"nodeType":"168","messageId":"169","endLine":132,"endColumn":55},{"ruleId":"141","severity":1,"message":"170","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"171","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"172","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"173","line":5,"column":24,"nodeType":"143","messageId":"144","endLine":5,"endColumn":44},{"ruleId":"141","severity":1,"message":"174","line":5,"column":46,"nodeType":"143","messageId":"144","endLine":5,"endColumn":57},{"ruleId":"141","severity":1,"message":"175","line":5,"column":59,"nodeType":"143","messageId":"144","endLine":5,"endColumn":74},{"ruleId":"141","severity":1,"message":"176","line":12,"column":10,"nodeType":"143","messageId":"144","endLine":12,"endColumn":15},{"ruleId":"141","severity":1,"message":"177","line":12,"column":17,"nodeType":"143","messageId":"144","endLine":12,"endColumn":25},{"ruleId":"141","severity":1,"message":"170","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"178","line":7,"column":7,"nodeType":"143","messageId":"144","endLine":7,"endColumn":12},{"ruleId":"141","severity":1,"message":"170","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"171","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"172","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"179","line":12,"column":3,"nodeType":"143","messageId":"144","endLine":12,"endColumn":26},{"ruleId":"155","severity":1,"message":"156","line":98,"column":13,"nodeType":"157","endLine":99,"endColumn":15},{"ruleId":"141","severity":1,"message":"170","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"171","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"172","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"173","line":5,"column":24,"nodeType":"143","messageId":"144","endLine":5,"endColumn":44},{"ruleId":"141","severity":1,"message":"180","line":5,"column":59,"nodeType":"143","messageId":"144","endLine":5,"endColumn":73},{"ruleId":"141","severity":1,"message":"176","line":10,"column":10,"nodeType":"143","messageId":"144","endLine":10,"endColumn":15},{"ruleId":"141","severity":1,"message":"177","line":10,"column":17,"nodeType":"143","messageId":"144","endLine":10,"endColumn":25},{"ruleId":"141","severity":1,"message":"181","line":12,"column":9,"nodeType":"143","messageId":"144","endLine":12,"endColumn":16},{"ruleId":"141","severity":1,"message":"182","line":26,"column":9,"nodeType":"143","messageId":"144","endLine":26,"endColumn":17},{"ruleId":"141","severity":1,"message":"183","line":36,"column":9,"nodeType":"143","messageId":"144","endLine":36,"endColumn":17},{"ruleId":"141","severity":1,"message":"184","line":47,"column":9,"nodeType":"143","messageId":"144","endLine":47,"endColumn":15},{"ruleId":"141","severity":1,"message":"185","line":8,"column":10,"nodeType":"143","messageId":"144","endLine":8,"endColumn":15},{"ruleId":"141","severity":1,"message":"186","line":8,"column":17,"nodeType":"143","messageId":"144","endLine":8,"endColumn":25},{"ruleId":"141","severity":1,"message":"187","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"170","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":15},{"ruleId":"141","severity":1,"message":"171","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"172","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":23},{"ruleId":"141","severity":1,"message":"173","line":8,"column":3,"nodeType":"143","messageId":"144","endLine":8,"endColumn":23},{"ruleId":"141","severity":1,"message":"188","line":9,"column":3,"nodeType":"143","messageId":"144","endLine":9,"endColumn":25},{"ruleId":"189","severity":1,"message":"190","line":53,"column":1,"nodeType":"191","endLine":285,"endColumn":3},{"ruleId":"141","severity":1,"message":"187","line":2,"column":10,"nodeType":"143","messageId":"144","endLine":2,"endColumn":19},{"ruleId":"141","severity":1,"message":"192","line":2,"column":32,"nodeType":"143","messageId":"144","endLine":2,"endColumn":43},{"ruleId":"141","severity":1,"message":"154","line":2,"column":53,"nodeType":"143","messageId":"144","endLine":2,"endColumn":58},{"ruleId":"193","severity":1,"message":"194","line":8,"column":89,"nodeType":"195","messageId":"196","endLine":8,"endColumn":91},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavbarBrand' is defined but never used.","'Badge' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Histogram' is defined but never used.","'ProgramCounterSamplePlot' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'props.server'. Either include it or remove the dependency array.","ArrayExpression",["199"],"React Hook React.useEffect has missing dependencies: 'configuration', 'dataList', and 'processData'. Either include them or remove the dependency array.",["200"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'Chart' is defined but never used.","'Line' is defined but never used.","'Scatter' is defined but never used.","'VictoryZoomContainer' is defined but never used.","'VictoryLine' is defined but never used.","'VictorHistogram' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'label' is defined but never used.","'VictoryVoronoiContainer' is defined but never used.","'VictoryScatter' is defined but never used.","'sckData' is assigned a value but never used.","'misoData' is assigned a value but never used.","'mosiData' is assigned a value but never used.","'csData' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'Container' is defined but never used.","'VictoryCursorContainer' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [props.server]",{"range":"205","text":"206"},"Update the dependencies array to be: [configuration, dataList, incoming, processData]",{"range":"207","text":"208"},[2682,2684],"[props.server]",[3669,3679],"[configuration, dataList, incoming, processData]"]