[{"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js":"1","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js":"2","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js":"3","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js":"4","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js":"5","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js":"6","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js":"7","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js":"8","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Flash.js":"9","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Trace.js":"10","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Settings.js":"11","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Property.js":"12","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Bitrate.js":"13","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Boolean.js":"14","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Delegate.js":"15","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/QuickStart.js":"16","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/About.js":"17","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Files.js":"18","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/Section.js":"19","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Reference.js":"20","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/InternalJump.js":"21","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/ExternalJump.js":"22","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/GetRequest.js":"23","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/AppContainer.js":"24","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/contexts/NetworkContext.js":"25","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TextInput.js":"26","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/FlashSettings.js":"27","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/DebugSettings.js":"28","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TraceSettings.js":"29","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/LoadingSpinner.js":"30","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PostRequest.js":"31","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PutRequest.js":"32","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/UserFileUpload.js":"33","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/CopyCommand.js":"34","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/FlashFileUpload.js":"35","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/ApiRequest.js":"36","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/Terminal.js":"37","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/Viewer.js":"38","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/Instrumentation.js":"39","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/InstrumentationDetail.js":"40","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Histogram.js":"41","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Logic.js":"42","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Plot.js":"43","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Theme.js":"44","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Heap.js":"45","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/SequenceDiagram.js":"46","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Log.js":"47","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/TraceSpecification.js":"48","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/TimePlot.js":"49","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/EventCounter.js":"50","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/utility/TraceLineParser.js":"51","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/utility/SaveSvg.js":"52"},{"size":500,"mtime":1608776256516,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":1608776256517,"results":"55","hashOfConfig":"54"},{"size":3260,"mtime":1619472914398,"results":"56","hashOfConfig":"54"},{"size":654,"mtime":1615695778905,"results":"57","hashOfConfig":"54"},{"size":746,"mtime":1612135292304,"results":"58","hashOfConfig":"54"},{"size":1669,"mtime":1615695676641,"results":"59","hashOfConfig":"54"},{"size":3888,"mtime":1615696102029,"results":"60","hashOfConfig":"54"},{"size":1612,"mtime":1615695757774,"results":"61","hashOfConfig":"54"},{"size":4995,"mtime":1618541639765,"results":"62","hashOfConfig":"54"},{"size":3608,"mtime":1620272179263,"results":"63","hashOfConfig":"54"},{"size":4305,"mtime":1618101311817,"results":"64","hashOfConfig":"54"},{"size":780,"mtime":1611982033323,"results":"65","hashOfConfig":"66"},{"size":452,"mtime":1617228700832,"results":"67","hashOfConfig":"54"},{"size":477,"mtime":1612757617582,"results":"68","hashOfConfig":"54"},{"size":740,"mtime":1615695525718,"results":"69","hashOfConfig":"54"},{"size":2044,"mtime":1612136183461,"results":"70","hashOfConfig":"54"},{"size":722,"mtime":1612135637668,"results":"71","hashOfConfig":"54"},{"size":5305,"mtime":1618068095660,"results":"72","hashOfConfig":"54"},{"size":457,"mtime":1611989913948,"results":"73","hashOfConfig":"54"},{"size":4933,"mtime":1620341680839,"results":"74","hashOfConfig":"54"},{"size":497,"mtime":1612036607470,"results":"75","hashOfConfig":"54"},{"size":439,"mtime":1612135908270,"results":"76","hashOfConfig":"54"},{"size":2006,"mtime":1612135785483,"results":"77","hashOfConfig":"66"},{"size":228,"mtime":1612029048993,"results":"78","hashOfConfig":"54"},{"size":222,"mtime":1619472899188,"results":"79","hashOfConfig":"54"},{"size":473,"mtime":1612060668629,"results":"80","hashOfConfig":"54"},{"size":2661,"mtime":1613621876033,"results":"81","hashOfConfig":"54"},{"size":1895,"mtime":1612721881328,"results":"82","hashOfConfig":"54"},{"size":2016,"mtime":1614643418737,"results":"83","hashOfConfig":"54"},{"size":330,"mtime":1612135851948,"results":"84","hashOfConfig":"54"},{"size":2009,"mtime":1612135792156,"results":"85","hashOfConfig":"66"},{"size":2006,"mtime":1612135843317,"results":"86","hashOfConfig":"66"},{"size":3698,"mtime":1618068078610,"results":"87","hashOfConfig":"54"},{"size":465,"mtime":1612136169498,"results":"88","hashOfConfig":"54"},{"size":3588,"mtime":1618538783392,"results":"89","hashOfConfig":"54"},{"size":1167,"mtime":1618541519070,"results":"90","hashOfConfig":"54"},{"size":743,"mtime":1619560109884,"results":"91","hashOfConfig":"54"},{"size":2122,"mtime":1620361704672,"results":"92","hashOfConfig":"54"},{"size":1239,"mtime":1620362248423,"results":"93","hashOfConfig":"54"},{"size":1820,"mtime":1620362539698,"results":"94","hashOfConfig":"54"},{"size":704,"mtime":1620343564379,"results":"95","hashOfConfig":"54"},{"size":2721,"mtime":1620184785209,"results":"96","hashOfConfig":"54"},{"size":878,"mtime":1620343667377,"results":"97","hashOfConfig":"54"},{"size":5847,"mtime":1620157901779,"results":"98","hashOfConfig":"54"},{"size":3428,"mtime":1620343556840,"results":"99","hashOfConfig":"54"},{"size":1057,"mtime":1620362990317,"results":"100","hashOfConfig":"54"},{"size":2632,"mtime":1620343571924,"results":"101","hashOfConfig":"54"},{"size":8977,"mtime":1620361691251,"results":"102","hashOfConfig":"54"},{"size":909,"mtime":1620343651801,"results":"103","hashOfConfig":"54"},{"size":1034,"mtime":1620359935162,"results":"104","hashOfConfig":"54"},{"size":1739,"mtime":1620179943778,"results":"105","hashOfConfig":"54"},{"size":567,"mtime":1620362699937,"results":"106","hashOfConfig":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"kfs5sw",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"109"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1r4for7",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"109"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"109"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"109"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"109"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"109"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"109"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"109"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"109"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js",[],["221","222"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Flash.js",["223"],"import React from 'react'\nimport { Button, Col, Row, ListGroup } from 'react-bootstrap'\n\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport {\n  faBolt,\n  faInfo,\n  faEraser,\n  faEye,\n  faRedo,\n  faSlidersH,\n  faHistory,\n  faChevronRight\n} from '@fortawesome/free-solid-svg-icons'\n\nimport AppContainer from '../components/AppContainer'\nimport FlashFileUpload from '../components/FlashFileUpload'\nimport { NetworkContext } from '../contexts/NetworkContext'\nimport ApiRequest from '../components/ApiRequest'\nimport TextInput from '../components/settings/TextInput'\n\n\nconst Flash = props => {\n\n  const [activeFile, setActiveFile] = React.useState(\"\");\n  const [list, setList] = React.useState({});\n  const [requestPath, setRequestPath] = React.useState(\"\");\n  const [count, setCount] = React.useState(0);\n  const [readSize, setReadSize] = React.useState(\"256\");\n  const [flashPath, setFlashPath] = React.useState(\"/home/flash/latest.elf\");\n  const [readStart, setReadStart] = React.useState(\"0x08000000\");\n  const [flashResult, setFlashResult] = React.useState(null);\n  const network = React.useContext(NetworkContext);\n\n  async function loadDirectory(directory) {\n    setActiveFile(\"\");\n    console.log(`request /fs.json/home/${directory}`)\n    await fetch(`${network.host}/fs.json/home/${directory}`)\n      .then(response => response.json())\n      .catch(e => setList({}))\n      .then(result => {\n        setList(result)\n      })\n  }\n\n  React.useEffect(() => {\n    loadDirectory(\"flash\")\n  }, [network.host])\n\n  function onSettingsClicked() {\n    console.log(\"Clicked Settings\")\n    props.setPage(\"Settings\");\n  }\n\n  function updateRequestPath(path){\n    setCount(count+1)\n    setRequestPath(path)\n  }\n\n  function onProgramClicked() {\n    updateRequestPath(`/flash/program/fs${flashPath}/`)\n  }\n\n  function onEraseClicked() {\n    updateRequestPath(`/flash/erase/start/${readStart}/size/${readSize}`)\n  }\n\n  function onReadClicked() {\n    updateRequestPath(`/flash/read/start/${readStart}/size/${readSize}`)\n  }\n\n  function onResetClicked() {\n    updateRequestPath(\"/flash/reset\")\n  }\n\n  function onPingClicked() { \n    updateRequestPath(\"/flash/ping\")\n  }\n\n  function readSizeChanged(value) {\n    setReadSize(value);\n  }\n\n  function readStartChanged(value) {\n    setReadStart(value);\n  }\n\n  function flashProgramComplete(result) {\n    console.log(`set flash result ${result}`)\n    setFlashResult(result);\n  }\n\n  const buttonClass = \"mr-2 mb-2 btn\"\n\n  return (\n    <AppContainer>\n      <Row className=\"mb-3\">\n        <Col md={8}>\n          <Button className={buttonClass} onClick={onSettingsClicked} ><FA icon={faSlidersH} /> Flash Settings</Button>\n\n          <FlashFileUpload onProgramComplete={flashProgramComplete} start={readStart}/>\n          <TextInput\n            name=\"Program/Read/Erase Start (0x)\"\n            placeholder=\"0x00000000\"\n            value={readStart}\n            onChange={(value) => readStartChanged(value)}\n            description=\"Start address (in hex) for read operations\" />\n          <TextInput\n            name=\"Erase/Read Size\"\n            placeholder=\"256\"\n            value={readSize}\n            onChange={(value) => readSizeChanged(value)}\n            description=\"Read page size\" />\n          <TextInput\n            name=\"Flash Path\"\n            placeholder=\"/home/flash/latest.bin\"\n            value={flashPath}\n            onChange={(value) => setFlashPath(value)}\n            description=\"Toolbox path to flash image\" />\n\n          <Row className=\"mb-3\">\n            <Col>\n              <Button className={buttonClass} variant=\"success\" onClick={onProgramClicked} ><FA icon={faBolt} /> Program</Button>\n              <Button className={buttonClass} variant=\"danger\" onClick={onEraseClicked} ><FA icon={faEraser} /> Erase</Button>\n              <Button className={buttonClass} onClick={onReadClicked}><FA icon={faEye} /> Read</Button>\n              <Button className={buttonClass} onClick={onResetClicked}><FA icon={faRedo} /> Reset</Button>\n              <Button className={buttonClass} onClick={onPingClicked}><FA icon={faInfo} /> Ping</Button>\n            </Col>\n          </Row>\n          <ApiRequest count={count} path={requestPath} response={flashResult} />\n          <h4><FA icon={faHistory} /> Flash History</h4>\n\n          <ListGroup variant=\"flush\">\n            {list !== undefined && Object.keys(list).map((key, index) => {\n              return <ListGroup.Item\n                key={key}\n                action={true}\n                active={key === activeFile}\n                onClick={() => setActiveFile(key)}\n              > {key}\n                <span className=\"float-right\">\n                  <FA icon={faChevronRight} />\n                </span>\n              </ListGroup.Item>\n            })}\n            {(list === {} || list === undefined) && <ListGroup.Item>No Files Here</ListGroup.Item>}\n            <hr />\n          </ListGroup>\n        </Col>\n      </Row>\n\n    </AppContainer>\n  )\n}\n\nexport default Flash\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Trace.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Settings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Property.js",["224"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Bitrate.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Boolean.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Delegate.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/QuickStart.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/About.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Files.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/Section.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Reference.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/InternalJump.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/ExternalJump.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/GetRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/AppContainer.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/contexts/NetworkContext.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TextInput.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/FlashSettings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/DebugSettings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TraceSettings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/LoadingSpinner.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PostRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PutRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/UserFileUpload.js",["225"],"import React from 'react'\nimport { Form, Card, Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\n\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport {\n  faBoxOpen,\n  faBullseye,\n  faFolderOpen,\n  faSpinner\n} from '@fortawesome/free-solid-svg-icons'\n\nimport AppContainer from './AppContainer'\nimport { NetworkContext } from '../contexts/NetworkContext'\n\nconst UserFileUpload = props => {\n\n  let count = 0;\n  const [isOverwrite, setOverwrite] = React.useState(false);\n  const [isUploadBusy, setUploadBusy] = React.useState(false);\n  const network = React.useContext(NetworkContext);\n\n  async function uploadFile(url, data) {\n    let method = isOverwrite ? 'PUT' : 'POST';\n\n    console.log(`attempt to upload to ${url} using ${method}`);\n    const response = await fetch(url, {\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        'Content-Type': 'application/blob'\n      },\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: data // body data type must match \"Content-Type\" header\n    }).catch((e) => {\n      console.log(`failed to upload ${e}`)\n    });\n    console.log(\"call file complete\" + props.onFileComplete);\n    count = count - 1;\n    if (count === 0) {\n      props.onFileComplete !== undefined && props.onFileComplete(url)\n    }\n    setUploadBusy(false);\n    return response !== undefined ? response.json() : null; // parses JSON response into native JavaScript objects\n  }\n\n  async function readAndUploadFile(file) {\n    const reader = new FileReader()\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      uploadFile(`${network.host}/fs.json/home/user/${file.path}`, reader.result)\n    }\n\n    await reader.readAsArrayBuffer(file)\n  }\n\n\n  const onDrop = React.useCallback(acceptedFiles => {\n    async function uploadFileList(list) {\n      setUploadBusy(true);\n      count = list.length;\n      props.onStart !== undefined && props.onStart(list)\n      await list.forEach((file) => {\n        readAndUploadFile(file)\n      })\n    }\n\n    uploadFileList(acceptedFiles);\n\n\n  }, [])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n\n  function toggleOverwrite() {\n    setOverwrite(!isOverwrite);\n    console.log(`is overwrite ${!isOverwrite}`)\n  }\n\n  return (\n    <AppContainer>\n      <Form>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Overwrite Existing Files\" defaultChecked={isOverwrite} onChange={toggleOverwrite} />\n        </Form.Group>\n      </Form>\n      <Card className=\"text-center\" style={{ cursor: \"pointer\" }}>\n        <Card.Body {...getRootProps()}>\n          <input {...getInputProps()} />\n          {isUploadBusy === false && <div><p>Drop file here</p>\n            {\n              isDragActive ?\n                <p><FA icon={faBullseye} size=\"2x\" /></p> : <p><FA icon={faBoxOpen} size=\"2x\" /></p>\n            }\n            <p><Button variant=\"light\"><FA icon={faFolderOpen} /> Select File</Button></p>\n          </div>}\n          {isUploadBusy === true && <div>\n            <p><FA icon={faSpinner} spin size=\"2x\" /></p>\n            <p>Uploading Files...</p>\n          </div>}\n        </Card.Body>\n      </Card>\n    </AppContainer>\n  )\n}\n\nexport default UserFileUpload\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/CopyCommand.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/FlashFileUpload.js",["226"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\n\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport {\n  faBullseye,\n  faFolderOpen,\n  faSpinner,\n  faBolt\n} from '@fortawesome/free-solid-svg-icons'\n\nimport { NetworkContext } from '../contexts/NetworkContext'\n\nconst FlashFileUpload = props => {\n\n  let count = 0;\n  const [isUploadBusy, setUploadBusy] = React.useState(false);\n  const network = React.useContext(NetworkContext);\n\n  async function uploadFile(url, data) {\n    let method = 'PUT';\n\n    console.log(`attempt to upload to ${url} using ${method}`);\n    const response = await fetch(url, {\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        'Content-Type': 'application/blob'\n      },\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: data // body data type must match \"Content-Type\" header\n    }).catch((e) => {\n      console.log(`failed to upload ${e}`)\n    });\n    console.log(\"call file complete\" + props.onProgramComplete);\n    count = count - 1;\n    const result = response !== undefined ? await response.json() : null;\n    if (count === 0) {\n      props.onProgramComplete !== undefined && props.onProgramComplete(JSON.stringify(result))\n    }\n    setUploadBusy(false);\n    return result; // parses JSON response into native JavaScript objects\n  }\n\n  async function readAndUploadFile(file) {\n    \n    var suffix = file.name.substr(file.name.lastIndexOf('.') + 1);\n    const type = suffix === 'elf' ? 'elf' : 'bin';\n\n    console.log(file);\n    console.log(`type is ${type}`);\n    \n    \n    const reader = new FileReader()\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      uploadFile(`${network.host}/flash.json/program/type/${type}/start/${props.start}`, reader.result)\n    }\n\n    await reader.readAsArrayBuffer(file)\n    \n  }\n\n  async function uploadFileList(list) {\n    setUploadBusy(true);\n    count = list.length;\n    props.onStart !== undefined && props.onStart(list)\n    await list.forEach((file) => {\n      readAndUploadFile(file)\n    })\n  }\n\n\n  const onDrop = React.useCallback(acceptedFiles => {\n    // Do something with the files\n    uploadFileList(acceptedFiles);\n\n    //ensure length does not exceed PATH_MAX\n    //uploadFile(`${network.host}/fs/home/user/${acceptedFiles[0].path}`)\n\n\n  }, [])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <Card className=\"text-center mb-2\" style={{ cursor: \"pointer\" }}>\n      <Card.Body {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isUploadBusy === false && <div><p>Drop file here to program target</p>\n          {\n            isDragActive ?\n              <p><FA icon={faBullseye} size=\"2x\" /></p> : <p><FA icon={faBolt} size=\"2x\" /></p>\n          }\n          <p><Button variant=\"light\"><FA icon={faFolderOpen} /> Select File</Button></p>\n        </div>}\n        {isUploadBusy === true && <div>\n          <p><FA icon={faSpinner} spin size=\"2x\" /></p>\n          <p>Programming File...</p>\n        </div>}\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default FlashFileUpload\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/ApiRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/Terminal.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/Viewer.js",["227"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/Instrumentation.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/trace/InstrumentationDetail.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Histogram.js",["228","229"],"import React from 'react'\nimport { VictoryChart, VictoryHistogram } from \"victory\";\nimport AppContainer from '../AppContainer';\nimport { Row, Col } from 'react-bootstrap'\n\nimport Theme from './Theme'\n\n\nconst Histogram = props => {\n\n  let data = [];\n  const source = props.directive.sources;\n\n  for (let i in props.data) {\n    if (props.data[i].name === source) {\n      data.push({ x: parseFloat(props.data[i].value) });\n    }\n  }\n\n  return (\n    <AppContainer fluid className=\"mr-0 ml-0 pr-0 pl-0\">\n      <VictoryChart\n        theme={Theme}\n        height={250}\n      >\n        <VictoryHistogram\n          data={data}\n        />\n\n      </VictoryChart>\n    </AppContainer>\n  )\n}\n\nexport default Histogram\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Logic.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Plot.js",["230","231"],"import React from 'react'\nimport { VictoryChart, VictoryLine } from \"victory\";\nimport Theme from './Theme'\nimport AppContainer from '../AppContainer';\nimport { Row, Col } from 'react-bootstrap'\n\nconst Plot = props => {\n\n  let data = [];\n  const source = props.directive.sources;\n\n  for (let i in props.data) {\n    if (props.data[i].name === source) {\n      let values = props.data[i].value.split(\",\").map(Number);\n      data.push(values);\n    }\n  }\n  const series = data[0];\n\n  return (\n    <AppContainer fluid className=\"mr-0 ml-0 pr-0 pl-0\">\n      <VictoryChart domainPadding={{ y: 5 }}\n        theme={Theme}\n        height={250}\n      >\n        {series.length && series.map((value, index) => {\n          return index ? <VictoryLine data={data} x={0} y={index} key={\"series\" + index} /> : null;\n        })}\n      </VictoryChart>\n    </AppContainer>\n  )\n}\n\nexport default Plot\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Theme.js",["232"],"import { assign } from \"lodash\";\n\n// *\n// * Colors\n// *\nconst yellow200 = \"#FFF59D\";\nconst deepOrange600 = \"#F4511E\";\nconst lime300 = \"#DCE775\";\nconst lightGreen500 = \"#8BC34A\";\nconst teal700 = \"#00796B\";\nconst cyan900 = \"#006064\";\nconst blueGrey50 = \"#ECEFF1\";\nconst blueGrey300 = \"#90A4AE\";\nconst blueGrey700 = \"#455A64\";\nconst grey900 = \"#212121\";\nconst colors = [deepOrange600, blueGrey300, lime300, lightGreen500, teal700, cyan900, yellow200];\n// *\n// * Typography\n// *\nconst sansSerif = \"'Helvetica Neue', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 500,\n  height: 100,\n  padding: { top: 5, bottom: 25, left: 30, right: 10}\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize:fontSize,\n  letterSpacing:letterSpacing,\n  padding: 1,\n  fill: blueGrey700,\n  stroke: \"transparent\",\n  strokeWidth: 0\n};\n\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\n\nexport default {\n  colors: colors,\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: grey900\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: blueGrey300,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding,\n          stroke: \"transparent\"\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"transparent\",\n          strokeDasharray,\n          strokeLinecap,\n          strokeLinejoin,\n          pointerEvents: \"painted\"\n        },\n        ticks: {\n          fill: \"transparent\",\n          size: 5,\n          stroke: blueGrey300,\n          strokeWidth: 1,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        tickLabels: assign({}, baseLabelStyles, {\n          fill: blueGrey700\n        })\n      }\n    },\n    baseProps\n  ),\n  polarDependentAxis: assign({\n    style: {\n      ticks: {\n        fill: \"transparent\",\n        size: 1,\n        stroke: \"transparent\"\n      }\n    }\n  }),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          padding,\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        maxLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        median: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        medianLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        min: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        minLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        q1: { padding, fill: blueGrey700 },\n        q1Labels: assign({}, baseLabelStyles, { padding: 3 }),\n        q3: { padding, fill: blueGrey700 },\n        q3Labels: assign({}, baseLabelStyles, { padding: 3 })\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: blueGrey700\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5 })\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: blueGrey700\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  histogram: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          stroke: grey900,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 1\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: assign(\n    {\n      colorScale: colors,\n      style: {\n        data: {\n          padding,\n          stroke: blueGrey50,\n          strokeWidth: 1\n        },\n        labels: assign({}, baseLabelStyles, { padding: 20 })\n      }\n    },\n    baseProps\n  ),\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          opacity: 1,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, baseLabelStyles, { padding: 0, pointerEvents: \"none\" }),\n    flyoutStyle: {\n      stroke: grey900,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: 5,\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n        flyout: {\n          stroke: grey900,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Heap.js",["233","234"],"import React from 'react'\nimport { VictoryChart, VictoryAxis, VictoryBar, VictoryZoomContainer } from \"victory\";\nimport { Col, Row } from 'react-bootstrap'\nimport AppContainer from '../AppContainer';\nimport Theme from './Theme'\n\n\nconst Heap = props => {\n\n  let snapshots = [];\n  let allocatedBlocks = [];\n  let heap = { address: 0, size: 0 };\n  const source = props.directive.sources;\n\n  function freeBlock(address) {\n    const index = allocatedBlocks.findIndex(element => element.address === address);\n    if (index !== -1) {\n      allocatedBlocks[index].size = 0;\n    }\n  }\n\n  function allocateBlock(address, size) {\n    const item = { address: address, size: size };\n    const index = allocatedBlocks.findIndex(element => element.size === 0);\n    if (index !== -1) {\n      allocatedBlocks[index] = item;\n    } else {\n      allocatedBlocks.push(item);\n    }\n  }\n\n  let stateCount = 0;\n  for (let i in props.data) {\n    if (props.data[i].name === source) {\n      const values = props.data[i].value.split(\",\");\n      if (values.length) {\n\n        if (values[0] === \"alloc\") {\n          //alloc,address,size\n          allocateBlock(values[1], values[2]);\n        } else if (values[0] === \"free\") {\n          //free,address\n          freeBlock(values[1]);\n        } else if (values[0] === \"resize\") {\n          //resize,base address, size\n          heap = { address: values[1], size: values[2] };\n        }\n\n        snapshots.push({ state: stateCount, heap: { ...heap }, allocatedBlocks: JSON.parse(JSON.stringify(allocatedBlocks)) });\n        stateCount++;\n        if (stateCount === 50) {\n          break;\n        }\n      }\n    }\n  }\n\n  return (\n    <AppContainer>\n      <VictoryChart padding={{ left: 80, top: 10, right: 15, bottom: 20 }}\n        style={{ padding: { right: 50 } }}\n        theme={Theme}\n        height={250}\n        containerComponent={\n          <VictoryZoomContainer\n            zoomDimension={\"x\"}\n            allowZoom={false}\n            allowPan={true}\n          />\n        }\n      >\n        {snapshots.map((element, index) => {\n          return (<VictoryBar\n            style={{\n              data: {\n                fill: \"#111\",\n                width: 8\n              }\n            }}\n            key={`heap${index}`}\n            data={[\n              {\n                x: element.state + 1,\n                y: parseInt(element.heap.address),\n                y0: parseInt(element.heap.address) + parseInt(element.heap.size)\n              }\n            ]}\n          />)\n        })}\n        <VictoryAxis\n        />\n        <VictoryAxis dependentAxis\n          tickFormat={x => `0x${x.toString(16)}`}\n        />\n\n        {snapshots.map((elementOuter, indexOuter) => elementOuter.allocatedBlocks.map((element, index) => {\n          if (parseInt(element.size) > 0) {\n            return (<VictoryBar\n              style={{\n                data: {\n                  fill: Theme.colors[index % Theme.colors.length],\n                  width: 4\n                }\n              }}\n              key={`heap${index}`}\n              data={[\n                {\n                  x: elementOuter.state + 1,\n                  y: parseInt(element.address),\n                  y0: parseInt(element.address) + parseInt(element.size)\n                }\n              ]}\n            />)\n          } else {\n            return null;\n          }\n        }))}\n\n      </VictoryChart>\n    </AppContainer>\n  )\n}\n\nexport default Heap\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/SequenceDiagram.js",["235"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/Log.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/TraceSpecification.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/TimePlot.js",["236","237"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/instrumentation/EventCounter.js",["238","239"],"import React from 'react'\nimport { VictoryChart, VictoryBar } from \"victory\";\nimport Theme from './Theme'\nimport AppContainer from '../AppContainer';\nimport { Row, Col } from 'react-bootstrap'\n\nconst EventCounter = props => {\n\n  let data = [];\n  const sourceList = props.directive.sources.split(\",\");\n\n  for (let i in props.data) {\n    const name = props.data[i].name;\n    if( sourceList.includes(name) ) {\n      //does data already include this\n      const value = parseInt(props.data[i].value);\n      let element = data.find(element => element.x === name);\n      if( element !== undefined ){\n        if( value > element.y ){\n          element.y = value;\n        }\n      } else {\n        data.push({x: name, y: value});\n      }\n    }\n  }\n\n  return (\n    <AppContainer fluid className=\"mr-0 ml-0 pr-0 pl-0\">\n      <VictoryChart domainPadding={{ x: 30, y: 5 }}\n        theme={Theme}\n        height={250}\n      >\n      <VictoryBar \n      data={data}\n      />\n      </VictoryChart>\n    </AppContainer>\n  )\n}\n\nexport default EventCounter\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/utility/TraceLineParser.js",["240"],"\n\nconst TraceLineParser = (model, input) => {\n\n  const lineList = input.split('\\n');\n\n  lineList.map((line, index) => {\n    const lineElementList = line.split(':');\n\n    //is the first item the timestamp\n    let timestamp = 0.0;\n    let elementList = lineElementList;\n    if (String(line).startsWith(\"t\") && lineElementList.length > 1) {\n      timestamp = parseFloat(lineElementList[0].slice(1));\n      elementList = lineElementList.slice(1);\n    }\n\n    if (elementList.length > 1) {\n\n      const first = String(elementList[0]).toUpperCase();\n      if (first === 'DIRECTIVE' || first === 'DIR') {\n        if (elementList.length > 3) {\n          const type = elementList[1];\n          const name = elementList[2];\n          const sources = elementList[3];\n          const description = elementList.length > 4 ? elementList[4] : \"\";\n          const entry = { ts: timestamp, type: type, name: name, sources: sources, description: description };\n          model.directiveList.push(entry);\n        }\n        // DIR:<type>:<name>\n      } else if (first === 'DAT' || first === 'DATA' || first === 'D') {\n        if (elementList.length > 2) {\n          const name = elementList[1];\n          const value = elementList.splice(2).join(\":\");\n          const entry = { ts: timestamp, name: name, value: value };\n          model.data.push(entry);\n        }\n      } else {\n        if (elementList.length > 1) {\n          const name = elementList[0];\n          const value = elementList.splice(1).join(\":\");\n          const entry = { ts: timestamp, name: name, value: value };\n          model.log.push(entry)\n        } else {\n          model.log.push({ ts: 0, name: \"<raw>\", value: line });\n        }\n      }\n    }\n  })\n}\n\nexport default TraceLineParser\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/utility/SaveSvg.js",[],{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":48,"column":6,"nodeType":"247","endLine":48,"endColumn":20,"suggestions":"248"},{"ruleId":"249","severity":1,"message":"250","line":2,"column":10,"nodeType":"251","messageId":"252","endLine":2,"endColumn":14},{"ruleId":"245","severity":1,"message":"253","line":64,"column":15,"nodeType":"254","endLine":64,"endColumn":26},{"ruleId":"245","severity":1,"message":"255","line":86,"column":6,"nodeType":"247","endLine":86,"endColumn":8,"suggestions":"256"},{"ruleId":"245","severity":1,"message":"257","line":58,"column":6,"nodeType":"247","endLine":58,"endColumn":34,"suggestions":"258"},{"ruleId":"249","severity":1,"message":"259","line":4,"column":10,"nodeType":"251","messageId":"252","endLine":4,"endColumn":13},{"ruleId":"249","severity":1,"message":"260","line":4,"column":15,"nodeType":"251","messageId":"252","endLine":4,"endColumn":18},{"ruleId":"249","severity":1,"message":"259","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":13},{"ruleId":"249","severity":1,"message":"260","line":5,"column":15,"nodeType":"251","messageId":"252","endLine":5,"endColumn":18},{"ruleId":"261","severity":1,"message":"262","line":53,"column":1,"nodeType":"263","endLine":285,"endColumn":3},{"ruleId":"249","severity":1,"message":"260","line":3,"column":10,"nodeType":"251","messageId":"252","endLine":3,"endColumn":13},{"ruleId":"249","severity":1,"message":"259","line":3,"column":15,"nodeType":"251","messageId":"252","endLine":3,"endColumn":18},{"ruleId":"245","severity":1,"message":"264","line":33,"column":6,"nodeType":"247","endLine":33,"endColumn":23,"suggestions":"265"},{"ruleId":"249","severity":1,"message":"259","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":13},{"ruleId":"249","severity":1,"message":"260","line":5,"column":15,"nodeType":"251","messageId":"252","endLine":5,"endColumn":18},{"ruleId":"249","severity":1,"message":"259","line":5,"column":10,"nodeType":"251","messageId":"252","endLine":5,"endColumn":13},{"ruleId":"249","severity":1,"message":"260","line":5,"column":15,"nodeType":"251","messageId":"252","endLine":5,"endColumn":18},{"ruleId":"266","severity":1,"message":"267","line":7,"column":30,"nodeType":"268","messageId":"269","endLine":7,"endColumn":32},"no-native-reassign",["270"],"no-negated-in-lhs",["271"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'loadDirectory'. Either include it or remove the dependency array.","ArrayExpression",["272"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","Assignments to the 'count' variable from inside React Hook React.useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useCallback.","MemberExpression","React Hook React.useCallback has a missing dependency: 'uploadFileList'. Either include it or remove the dependency array.",["273"],"React Hook React.useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["274"],"'Row' is defined but never used.","'Col' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook React.useEffect has a missing dependency: 'svgId'. Either include it or remove the dependency array.",["275"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},"Update the dependencies array to be: [loadDirectory, network.host]",{"range":"284","text":"285"},"Update the dependencies array to be: [uploadFileList]",{"range":"286","text":"287"},"Update the dependencies array to be: [network.host, props, props.source]",{"range":"288","text":"289"},"Update the dependencies array to be: [graphDefinition, svgId]",{"range":"290","text":"291"},[1518,1532],"[loadDirectory, network.host]",[2795,2797],"[uploadFileList]",[1796,1824],"[network.host, props, props.source]",[843,860],"[graphDefinition, svgId]"]