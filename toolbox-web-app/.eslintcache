[{"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js":"1","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js":"2","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js":"3","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js":"4","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js":"5","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js":"6","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Terminal.js":"7","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js":"8","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Insights.js":"9","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/InsightDetail.js":"10","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Plot.js":"11","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Logic.js":"12","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Histogram.js":"13","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Log.js":"14","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Theme.js":"15","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js":"16","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Flash.js":"17","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Trace.js":"18","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Settings.js":"19","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Property.js":"20","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Flash.js":"21","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Bitrate.js":"22","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Boolean.js":"23","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Delegate.js":"24","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Debug.js":"25","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Trace.js":"26","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/QuickStart.js":"27","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/About.js":"28","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Files.js":"29","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/Section.js":"30","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Reference.js":"31","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/InternalJump.js":"32","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/ExternalJump.js":"33","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/GetRequest.js":"34","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/AppContainer.js":"35"},{"size":500,"mtime":1608776256516,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":1608776256517,"results":"38","hashOfConfig":"37"},{"size":3869,"mtime":1612028963467,"results":"39","hashOfConfig":"37"},{"size":934,"mtime":1611984730593,"results":"40","hashOfConfig":"37"},{"size":810,"mtime":1609389201512,"results":"41","hashOfConfig":"37"},{"size":2039,"mtime":1612024981782,"results":"42","hashOfConfig":"37"},{"size":530,"mtime":1609392668242,"results":"43","hashOfConfig":"37"},{"size":4159,"mtime":1611981445671,"results":"44","hashOfConfig":"37"},{"size":1842,"mtime":1609433194559,"results":"45","hashOfConfig":"37"},{"size":1223,"mtime":1609431380584,"results":"46","hashOfConfig":"37"},{"size":625,"mtime":1609432190963,"results":"47","hashOfConfig":"37"},{"size":2903,"mtime":1609433435409,"results":"48","hashOfConfig":"37"},{"size":1324,"mtime":1609432796059,"results":"49","hashOfConfig":"37"},{"size":876,"mtime":1609430249669,"results":"50","hashOfConfig":"37"},{"size":5847,"mtime":1609431513731,"results":"51","hashOfConfig":"37"},{"size":2025,"mtime":1612036329332,"results":"52","hashOfConfig":"37"},{"size":2101,"mtime":1612035205558,"results":"53","hashOfConfig":"37"},{"size":1056,"mtime":1612029854706,"results":"54","hashOfConfig":"37"},{"size":638,"mtime":1612029367906,"results":"55","hashOfConfig":"37"},{"size":780,"mtime":1611982033323,"results":"56","hashOfConfig":"37"},{"size":489,"mtime":1611983085201,"results":"57","hashOfConfig":"37"},{"size":392,"mtime":1611982338713,"results":"58","hashOfConfig":"37"},{"size":343,"mtime":1611982501845,"results":"59","hashOfConfig":"37"},{"size":742,"mtime":1612022019634,"results":"60","hashOfConfig":"37"},{"size":509,"mtime":1611983074022,"results":"61","hashOfConfig":"37"},{"size":489,"mtime":1611983131172,"results":"62","hashOfConfig":"37"},{"size":2247,"mtime":1612025413833,"results":"63","hashOfConfig":"37"},{"size":765,"mtime":1612024932830,"results":"64","hashOfConfig":"37"},{"size":877,"mtime":1612029348436,"results":"65","hashOfConfig":"37"},{"size":457,"mtime":1611989913948,"results":"66","hashOfConfig":"37"},{"size":10454,"mtime":1612033374530,"results":"67","hashOfConfig":"37"},{"size":475,"mtime":1612025396546,"results":"68","hashOfConfig":"37"},{"size":408,"mtime":1612025692271,"results":"69","hashOfConfig":"37"},{"size":1084,"mtime":1612026478562,"results":"70","hashOfConfig":"37"},{"size":228,"mtime":1612029048993,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1r4for7",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"74"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"74"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js",[],["164","165"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js",["166","167","168","169","170","171","172"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js",["173","174","175","176","177","178","179"],"import React from 'react'\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, NavbarBrand, Badge } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight, faSync, faStop } from '@fortawesome/free-solid-svg-icons'\n\nconst Top = props => {\n\n  const serverStatus = props.serverStatus;\n\n  return (\n    <Navbar bg=\"light\" expand=\"sm\" className=\"mb-2\" className=\"border-bottom navbar-expand-lg\">\n      <Button variant=\"outline-secondary\" className=\"mr-2\" onClick={() => props.menuClicked() }><FontAwesomeIcon icon={faChevronRight} rotation={props.isSidebarOpen ? 180 : 0}/></Button>\n      <Button variant={serverStatus}>\n        <FontAwesomeIcon icon={serverStatus === \"success\" ? faStop : faSync} /> {props.server}\n        </Button>\n      <Navbar.Brand href=\"#home\" className=\"ml-auto\">{props.page} | Stratify Toolbox</Navbar.Brand>\n    </Navbar>\n  )\n}\n\nexport default Top\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js",["180","181","182"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\n\n\nconst Network = props => {\n\n  const [input, setInput] = React.useState(props.server)\n\n  return (\n    <div>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Server</Form.Label>\n          <Form.Control type=\"input\" placeholder=\"http://a.b.c.d:3002\" defaultValue={props.server} onChange={(item) => {\n            props.setServer(item.target.value)\n          }} />\n          <Form.Text className=\"text-muted\">\n            IP Address of Toolbox\n          </Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" onClick={() => {\n          //ping the server to see if it is listening\n        }}>\n          Ping\n            </Button>\n      </Form>\n    </div >\n  )\n}\n\nexport default Network\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js",["183","184","185","186","187","188"],"import React from 'react'\nimport { Container, ListGroup, ButtonGroup, Button, Badge, Row } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBook,\n  faNetworkWired,\n  faChartArea,\n  faFolderOpen,\n  faInfoCircle,\n  faBug,\n  faBolt,\n  faWaveSquare,\n  faPlay,\n  faSlidersH,\n  faTerminal\n} from '@fortawesome/free-solid-svg-icons'\n\n\nconst Item = props => {\n  return (\n    <ListGroup.Item action onClick={() => props.setPage(props.name)} active={props.page == props.name}>\n      <FontAwesomeIcon icon={props.icon} /> {props.name}\n    </ListGroup.Item>\n  )\n}\n\nconst SideBar = props => {\n\n  return (\n    <div>\n      <h5 className=\"ml-2 mr-2\">TARGET</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faBug} name=\"Debug\" page={props.page} />\n        <Item setPage={props.setPage} icon={faBolt} name=\"Flash\" page={props.page} />\n        <Item setPage={props.setPage} icon={faWaveSquare} name=\"Trace\" page={props.page} />\n        <Item setPage={props.setPage} icon={faTerminal} name=\"Terminal\" page={props.page} />\n        <Item setPage={props.setPage} icon={faChartArea} name=\"Insights\" page={props.page} />\n        <Item setPage={props.setPage} icon={faSlidersH} name=\"Settings\" page={props.page} />\n        <Item setPage={props.setPage} icon={faFolderOpen} name=\"Files\" page={props.page} />\n      </ListGroup>\n      <h5 className=\"ml-2 mr-2\">DOCS</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faPlay} name=\"Quick Start\" page={props.page} />\n        <Item setPage={props.setPage} icon={faBook} name=\"Reference\" page={props.page} />\n        <Item setPage={props.setPage} icon={faInfoCircle} name=\"About\" page={props.page} />\n      </ListGroup>\n      <h5 className=\"ml-2 mr-2\">EXTRA</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faNetworkWired} name=\"Network\" page={props.page} />\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default SideBar\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Terminal.js",["189","190","191","192"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\n\n\nconst Terminal = props => {\n\n  const messagesEndRef = React.createRef();\n  const content = (props.configuration !== undefined && props.configuration.data !== undefined) ? String(props.configuration.data.text.join('')) : \"\";\n\n\n  React.useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n  },[content])\n\n  return (\n    <pre>\n      {content}\n      <div ref={messagesEndRef} />\n    </pre>\n  )\n}\n\nexport default Terminal\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js",["193","194","195"],"import React from 'react'\nimport { Toast } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\n\nconst DebugClient = props => {\n\n  const [incoming, setIncoming] = React.useState(\"\");\n  const [newMessage, setNewMessage] = React.useState(\"\");\n\n  const configuration = props.configuration;\n  const setConfiguration = props.setConfiguration;\n  const dataList = props.data;\n  const setDataList = props.setData;\n  const serverStatus = props.serverStatus;\n  const setServerStatus = props.setServerStatus;\n\n  function processData(dataName, value, configurationNext) {\n    const dataItem = dataList[dataName];\n    if (dataItem !== undefined && dataItem.configurations !== undefined) {\n      //add the input to each output\n      dataItem.configurations.forEach((configurationName, index) => {\n        if (configurationNext[configurationName] !== undefined && configurationNext[configurationName].data[dataName] !== undefined) {\n          configurationNext[configurationName].data[dataName].push(value);\n        }\n      })\n    }\n  }\n\n  function processConfig(configurationName, item, configurationNext, dataListNext) {\n    //make sure item is valid\n    if (item.data !== undefined && item.type !== undefined) {\n      //item type must be plot, hist, log, raw, etc\n      if (configurationNext[configurationName] === undefined) {\n        configurationNext[configurationName] = item;\n      }\n\n      //now associate the data with the configuration in the data list\n      const dataKeys = Object.keys(item.data);\n      dataKeys.forEach((dataName, index) => {\n        if (dataListNext[dataName] === undefined) {\n          dataListNext[dataName] = {\n            configurations: [configurationName]\n          }\n        } else {\n          let configurationList = dataListNext[dataName].configurations;\n          if (configurationList.indexOf(configurationName) < 0) {\n            configurationList.push(configurationName);\n          }\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    console.log(\"create new event source\");\n    const source = new EventSource(`${props.server}/terminal`);\n\n    source.onopen = function (event) {\n      setNewMessage(`connected to ${props.server}`);\n      setServerStatus(\"success\");\n    }\n\n    source.addEventListener('error', function (e) {\n      setNewMessage(`failed to connect to ${props.server}`);\n      setServerStatus(\"danger\");\n    }, false);\n\n    source.onmessage = function (event) {\n      setIncoming(String(event.data));\n    }\n\n\n    return () => {\n      setServerStatus(\"danger\");\n      setNewMessage(`closed connection to ${props.server}`);\n      console.log(\"cleanup event source\");\n      source.close();\n    }\n\n  }, [])\n\n  React.useEffect(() => {\n    const lines = String(incoming).split(\"\\n\");\n\n    let configurationNext = Object.assign({}, configuration);\n    let dataListNext = Object.assign({}, dataList);\n\n    function processItem(item) {\n      const keys = Object.keys(item);\n\n      keys.forEach((key) => {\n        if (item[key].type !== undefined) {\n          processConfig(key, item[key], configurationNext, dataListNext);\n        } else {\n          processData(key, item[key], configurationNext);\n        }\n      });\n\n    }\n\n    lines.forEach((item, index) => {\n      if (item.length > 0) {\n        try {\n          const value = JSON.parse(item);\n          if (Array.isArray(value)) {\n            value.forEach((item, index) => {\n              processItem(item);\n            })\n          } else {\n            processItem(value);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n\n      }\n    })\n\n    setDataList(dataListNext);\n    setConfiguration(configurationNext);\n\n  }, [incoming])\n\n  return (\n    <div>\n      <Toast\n        style={{\n          position: 'absolute',\n          top: 75,\n          right: 10,\n        }}\n        autohide={true}\n        animation={true}\n        show={newMessage !== \"\"}\n        onClose={() => { setNewMessage(\"\") }}\n      >\n        <Toast.Body><FontAwesomeIcon icon={faInfo} /> {newMessage}</Toast.Body>\n      </Toast>\n    </div>\n  )\n}\n\nexport default DebugClient\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Insights.js",["196","197","198","199","200"],"import React from 'react'\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faTerminal,\n  faNetworkWired,\n  faChartArea,\n  faChartLine,\n  faFolderOpen,\n  faInfoCircle,\n  faWaveSquare,\n  faStop,\n  faChartBar,\n  faList\n} from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nconst Summary = props => {\n\n  function getIcon(type) {\n    switch (type) {\n      case \"plot\":\n        return faChartLine;\n      case \"histogram\":\n        return faChartBar;\n      case \"terminal\":\n        return faTerminal;\n      case \"logic\":\n        return faWaveSquare;\n      case \"log\":\n        return faList;\n    }\n\n    return faStop;\n  }\n\n\n  return (\n    <Card className=\"text-center\">\n      <Card.Header>\n        <h5>{props.name} {props.configuration.type}</h5>\n      </Card.Header>\n      <Card.Body>\n        <Button variant=\"outline-primary\" onClick={() => { props.setInsightDetail(props.name, props.configuration) }}><FontAwesomeIcon icon={getIcon(props.configuration.type)} size=\"4x\" /></Button>\n      </Card.Body>\n      <Card.Footer>\n        {\n          Object.keys(props.configuration.data).map((key, index) => {\n            return <span>{key} </span>\n          })\n        }\n      </Card.Footer>\n    </Card>\n  )\n}\n\n\n\nconst Insights = props => {\n\n  const configuration = props.configuration;\n\n  return (\n    <Container fluid>\n      <Row className=\"mt-2\">\n        {\n          configuration !== undefined && Object.keys(configuration).map((key, index) => {\n            return (\n              <Col md={4} className=\"mb-3\">\n                <Summary name={key} setInsightDetail={props.setInsightDetail} configuration={configuration[key]} key={key + index} />\n              </Col>\n            )\n          })\n        }\n      </Row>\n    </Container >\n  )\n}\n\nexport default Insights\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/InsightDetail.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217"],"import React from 'react'\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faTerminal,\n  faNetworkWired,\n  faChartArea,\n  faChartLine,\n  faFolderOpen,\n  faInfoCircle,\n  faWaveSquare,\n  faStop,\n  faChartBar,\n  faList\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Plot from '../components/insights/Plot'\nimport Logic from '../components/insights/Logic'\nimport Histogram from '../components/insights/Histogram'\nimport Log from '../components/insights/Log'\nimport Terminal from './Terminal'\n\n\n\nconst InsightDetail = props => {\n\n  const configuration = props.configuration;\n\n  function getComponent() {\n    switch (configuration.type) {\n      case \"plot\":\n        return <Plot configuration={configuration} />\n      case \"histogram\":\n        return <Histogram configuration={configuration} />\n      case \"terminal\":\n        return <Terminal configuration={configuration} />\n      case \"logic\":\n        return <Logic configuration={configuration} />\n      case \"log\":\n        return <Log configuration={configuration} />\n    }\n\n    return null;\n  }\n\n  return (<div>\n    {getComponent()}\n  </div>)\n}\n\nexport default InsightDetail\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Plot.js",["218","219","220","221","222","223","224"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport { VictoryChart, VictoryZoomContainer, VictoryLine, VictoryScatter } from \"victory\";\nimport Theme from './Theme'\n\nconst Plot = props => {\n\n  return (\n    <VictoryChart domainPadding={{ y: 5 }}\n    theme={Theme} \n    height={250}\n    >\n      { Object.keys(props.configuration.data).map((key, index) => {\n        return <VictoryLine data={props.configuration.data[key]} x={0} y={1} key={\"series\" + key} />\n      })}\n    </VictoryChart>\n  )\n}\n\nexport default Plot\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Logic.js",["225","226","227","228","229","230","231"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport {\n  createContainer,\n  VictoryChart,\n  VictoryZoomContainer,\n  VictoryCursorContainer,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryAxis,\n  VictoryLegend\n} from \"victory\";\n\nimport Theme from './Theme'\n\n\nconst Logic = props => {\n\n  const [zoomDomain, setZoomDomain] = React.useState({ zoomDomain: { x: [] } });\n\n  function handleZoom(domain) {\n    setZoomDomain(domain);\n  }\n\n  const VictoryZoomCursorContainer = createContainer(\"zoom\", \"voronoi\");\n\n  return (\n    <div>\n      <VictoryChart domainPadding={{ y: 0 }} width={400} height={30}\n        theme={Theme}\n        padding={{ top: 5, bottom: 0, left: 25, right: 10 }}\n        containerComponent={\n          <VictoryBrushContainer\n            brushDimension=\"x\"\n            brushDomain={zoomDomain}\n            onBrushDomainChange={handleZoom}\n          />\n        }\n      >\n        <VictoryAxis style={{ axis: { strokeWidth: 0 } }} />\n        {\n          Object.keys(props.configuration.data).map((key, index) => {\n            return <VictoryLine\n              style={{ data: { stroke: Theme.colors[index] } }}\n              data={props.configuration.data[key]}\n              x={0}\n              y={1}\n              key={\"seriesBrush\" + key}\n              interpolation={'stepAfter'}\n            />\n          })\n        }\n\n      </VictoryChart>\n\n      <VictoryChart\n        theme={Theme}\n        domainPadding={{ y: 10 }} width={400} height={200}\n        padding={{ top: 40, bottom: 30, left: 25, right: 10 }}\n        containerComponent={\n          <VictoryZoomCursorContainer\n            allowZoom={false}\n            allowPan={true}\n            zoomDimension={\"x\"}\n            zoomDomain={zoomDomain}\n            onZoomDomainChange={handleZoom}\n            cursorDimension={\"x\"}\n            labels={({ datum }) => `${datum[0]}`}\n          />\n        }\n      >\n        <VictoryLegend x={100} y={175}\n          centerTitle\n          orientation=\"horizontal\"\n          gutter={20}\n          style={{ background: \"black\", border: { stroke: \"black\" }, title: { fontSize: 12 } }}\n          data={Object.keys(props.configuration.data).map((key, index) => {\n            return { name: key, symbol: { fill: Theme.colors[index], type: \"circle\" } }\n          })}\n        />\n        <VictoryAxis\n          orientation={\"top\"}\n          offsetY={30}\n\n        />\n        {Object.keys(props.configuration.data).map((key, index) => {\n          return <VictoryLine\n            style={{ data: { stroke: Theme.colors[index] } }}\n            data={props.configuration.data[key]}\n            x={0}\n            y={1}\n            key={\"series\" + key}\n            interpolation={'stepAfter'}\n            name={key}\n          />\n        })}\n\n      </VictoryChart>\n    </div>\n  )\n}\n\nexport default Logic\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Histogram.js",["232","233","234","235","236","237","238","239","240","241","242"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport { VictoryChart, VictoryZoomContainer, VictoryLine, VictorHistogram, VictoryHistogram } from \"victory\";\n\nimport Theme from './Theme'\n\n\nconst Histogram = props => {\n\n  const [count, setCount] = React.useState(0)\n\n  const temperatureData =\n    [\n      { x: 20 },\n      { x: 21 },\n      { x: 22 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 25 },\n      { x: 25 },\n      { x: 25 },\n      { x: 24 },\n      { x: 23 },\n      { x: 19 },\n      { x: 15 },\n      { x: 16 },\n      { x: 14 },\n      { x: 27 },\n      { x: 27 },\n      { x: 27 },\n      { x: 16 },\n      { x: 30 },\n      { x: 14 }\n    ];\n\n\n  return (\n    <VictoryChart\n      theme={Theme}\n      height={250}\n    >\n      { Object.keys(props.configuration.data).map((key, index) => {\n        return (\n          <VictoryHistogram\n            data={props.configuration.data[key]}\n            key={key}\n            x={1}\n          />\n        )\n      })}\n\n\n\n    </VictoryChart>\n  )\n}\n\nexport default Histogram\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Log.js",["243","244","245"],"import React from 'react'\nimport { Button, Card, Badge } from 'react-bootstrap'\n\nconst LogEntry = props => {\n  var variant;\n  var label;\n  if (props.type === \"debug\") {\n    variant = \"dark\"\n  } else if (props.type === \"info\") {\n    variant = \"info\"\n  } else if (props.type === \"warning\") {\n    variant = \"warning\"\n  } else if (props.type === \"error\") {\n    variant = \"danger\"\n  } else {\n    variant = \"primary\"\n  }\n\n  return (\n    <li>\n      timestamp: {props.text} <Badge pill variant={variant} className=\"float-right\">{props.type}</Badge> \n    </li>\n  )\n}\n\nconst Log = props => {\n  return (\n    <div>\n        <ul>\n          <LogEntry type=\"debug\" text=\"Hello\" />\n          <LogEntry type=\"info\" text=\"World\" />\n          <LogEntry type=\"warning\" text=\"Uh oh\" />\n          <LogEntry type=\"error\" text=\"An error happened\" />\n        </ul>\n    </div>\n  )\n}\n\nexport default Log\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Theme.js",["246"],"import { assign } from \"lodash\";\n\n// *\n// * Colors\n// *\nconst yellow200 = \"#FFF59D\";\nconst deepOrange600 = \"#F4511E\";\nconst lime300 = \"#DCE775\";\nconst lightGreen500 = \"#8BC34A\";\nconst teal700 = \"#00796B\";\nconst cyan900 = \"#006064\";\nconst blueGrey50 = \"#ECEFF1\";\nconst blueGrey300 = \"#90A4AE\";\nconst blueGrey700 = \"#455A64\";\nconst grey900 = \"#212121\";\nconst colors = [deepOrange600, blueGrey300, lime300, lightGreen500, teal700, cyan900, yellow200];\n// *\n// * Typography\n// *\nconst sansSerif = \"'Helvetica Neue', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 500,\n  height: 100,\n  padding: { top: 5, bottom: 25, left: 25, right: 10}\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize:fontSize,\n  letterSpacing:letterSpacing,\n  padding: 1,\n  fill: blueGrey700,\n  stroke: \"transparent\",\n  strokeWidth: 0\n};\n\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\n\nexport default {\n  colors: colors,\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: grey900\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: blueGrey300,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding,\n          stroke: \"transparent\"\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"transparent\",\n          strokeDasharray,\n          strokeLinecap,\n          strokeLinejoin,\n          pointerEvents: \"painted\"\n        },\n        ticks: {\n          fill: \"transparent\",\n          size: 5,\n          stroke: blueGrey300,\n          strokeWidth: 1,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        tickLabels: assign({}, baseLabelStyles, {\n          fill: blueGrey700\n        })\n      }\n    },\n    baseProps\n  ),\n  polarDependentAxis: assign({\n    style: {\n      ticks: {\n        fill: \"transparent\",\n        size: 1,\n        stroke: \"transparent\"\n      }\n    }\n  }),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          padding,\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        maxLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        median: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        medianLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        min: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        minLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        q1: { padding, fill: blueGrey700 },\n        q1Labels: assign({}, baseLabelStyles, { padding: 3 }),\n        q3: { padding, fill: blueGrey700 },\n        q3Labels: assign({}, baseLabelStyles, { padding: 3 })\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: blueGrey700\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5 })\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: blueGrey700\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  histogram: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          stroke: grey900,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 1\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: assign(\n    {\n      colorScale: colors,\n      style: {\n        data: {\n          padding,\n          stroke: blueGrey50,\n          strokeWidth: 1\n        },\n        labels: assign({}, baseLabelStyles, { padding: 20 })\n      }\n    },\n    baseProps\n  ),\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          opacity: 1,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, baseLabelStyles, { padding: 0, pointerEvents: \"none\" }),\n    flyoutStyle: {\n      stroke: grey900,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: 5,\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n        flyout: {\n          stroke: grey900,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js",["247","248"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Flash.js",["249","250","251"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Trace.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Settings.js",["252","253","254"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Property.js",["255"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Flash.js",["256","257"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nimport Delegate from './Delegate'\nimport Bitrate from './Bitrate'\nimport Boolean from './Boolean'\n\nconst Flash = props => {\n\n\n  return (\n    <Form>\n      <Delegate type=\"flash\" />\n      <Bitrate />\n      <Boolean name=\"Verify\">Verify the image was installed correctly</Boolean>\n      <Boolean name=\"Force\">Force install even if the image is already installed</Boolean>\n    </Form>\n  )\n}\n\nexport default Flash\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Bitrate.js",["258","259"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nconst Bitrate = props => {\n\n\n  return (\n    <Form.Group controlId=\"bitrate\">\n    <Form.Label>Bitrate</Form.Label>\n      <Form.Control type=\"input\" placeholder=\"2000000\" />\n      <Form.Text className=\"text-muted\">\n        Bitrate in bits/second.\n      </Form.Text>\n    </Form.Group>\n  )\n}\n\nexport default Bitrate\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Boolean.js",["260","261"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nconst Bitrate = props => {\n\n  return (\n  <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label={props.name} />\n    <Form.Text className=\"text-muted\">\n      {props.children}\n    </Form.Text>\n  </Form.Group>\n  )\n}\n\nexport default Bitrate\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Delegate.js",["262","263"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nconst Delegate = props => {\n\n  return (\n    <Form.Group controlId=\"formBasicCheckbox\">\n      <Form.Label>interface/family</Form.Label>\n      <Form.Check\n        type=\"radio\"\n        label=\"swd/stm32\"\n      />\n      <Form.Check\n        type=\"radio\"\n        label=\"swd/lpc\"\n      />\n      <Form.Check\n        type=\"radio\"\n        label=\"swd/atsam\"\n      />\n      <Form.Check\n        type=\"radio\"\n        label=\"isp/avr\"\n      />\n      <Form.Check\n        type=\"radio\"\n        label=\"swd/tbox\"\n      />\n      <Form.Text className=\"text-muted\">\n        Select the delegate (interface/family) to use.\n    </Form.Text>\n    </Form.Group>\n  )\n}\n\nexport default Delegate\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Debug.js",["264","265"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nimport Delegate from './Delegate'\nimport Bitrate from './Bitrate'\nimport Boolean from './Boolean'\n\nconst Flash = props => {\n\n\n  return (\n    <Form>\n      <Delegate type=\"debug\" />\n      <Bitrate />\n      <Boolean name=\"Hardware Reset\">Use the hardware signal to reset the device</Boolean>\n      <Boolean name=\"Connect Under Reset\">Connect to debug port while unit us under reset</Boolean>\n    </Form>\n  )\n}\n\nexport default Flash\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Trace.js",["266","267"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\nimport Delegate from './Delegate'\nimport Bitrate from './Bitrate'\nimport Boolean from './Boolean'\n\nconst Trace = props => {\n\n\n  return (\n    <Form>\n      <Delegate type=\"trace\" />\n      <Bitrate />\n      <Boolean name=\"Verify\">Verify the image was installed correctly</Boolean>\n      <Boolean name=\"Force\">Force install even if the image is already installed</Boolean>\n    </Form>\n  )\n}\n\nexport default Trace\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/QuickStart.js",["268","269"],"import React from 'react'\nimport { Container, Alert, Row, Button } from 'react-bootstrap'\n\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport {\n  faSlidersH,\n  faCopy,\n  faExternalLinkAlt\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Section from '../components/docs/Section'\nimport InternalJump from '../components/docs/InternalJump'\n\nconst QuickStart = props => {\n\n\n  const intro = `## Getting Started\n\nCongratulations! If you are reading this, you have successfully connected your Stratify Toolbox to the Wifi and loaded the web app.\nNow you can:\n\n- Flash\n- Trace\n- Debug\n\nBefore you get started with any of that, you will want to understand what a delegates are.\n\n`\n  const delegateIntro = `## Delegates`\n\n  const delegate = `A delegate is a program that runs on the Toolbox to provide a *function* (flash/trace/debug) over\nan *interface* for an MCU *family*. Before you can do anything exciting, you need to setup your delegate\nin the settings.\n`\n\n\n  const flashIntro = `## Flash and Trace\nThe primary use of the Toolbox is to rapidly flash and trace MCU programs.\n\nOnce you sort out the settings, you can flash the target by posting the \\`elf\\` file to the Toolbox.\n\n`\n\nconst flashCurlCommand = `\n\\`\\`\\`\ncurl -X POST --data-binary @path/to/firmware.elf http://<local ip address>/flash/program/elf\n\\`\\`\\`\n\nYou can bake that command right into your build system target. If the web app is open, it will automatically \nstart streaming the \\`trace\\` output. Otherwise, you can view the \\`trace\\` output using \\`curl\\`.\n\n\\`\\`\\`\ncurl http://<local ip address>/trace\n\\`\\`\\`\n\n`\n\n  return (\n    <Container className=\"mb-3\">\n      <Section markdown={intro} />\n      <Section markdown={delegateIntro} />\n      <Section markdown={delegate} >\n        <InternalJump page=\"Settings\" setPage={props.setPage} message=\"Configure delegate in Settings\" icon={faSlidersH} />\n      </Section>\n      <Section markdown={flashIntro} />\n      <Section markdown={flashCurlCommand}>\n        <Row>\n        <Button className=\"mb-2 btn-block text-left\" variant='success'>Copy curl command with IP address <FA className=\"float-right\" icon={faCopy} /></Button>\n        </Row>\n      </Section>\n    </Container>\n  )\n}\n\nexport default QuickStart\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/About.js",["270"],"import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport ReactMarkdown from 'react-markdown'\n\nimport Section from '../components/docs/Section'\n\nconst About = props => {\n\n\n  const overview = `# Stratify Toolbox\n\nCopyright 2021. Stratify Labs, Inc. See LICENSE.md for more information.\n`\n\n  const credits = `## Credits\n\nSpecial Thanks to:\n\n- compiler-rt (clang)\n- newlib\n- gcc (building and compiling)\n- GCC C++ standard library\n- ARM DAP Link\n- LWIP\n- STM32 HAL Library\n- mbedtls\n- jansson JSON library\n- Stratify OS\n- Stratify C++ API Framework\n- Font Awesome Icons\n- Google Fonts\n` \n\n  return (\n    <Container className=\"mb-3\">\n    <Section markdown={overview} />\n    <Section markdown={credits} />\n    </Container>\n  )\n}\n\nexport default About\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Files.js",["271","272","273"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/Section.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Reference.js",["274","275","276","277"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/InternalJump.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/ExternalJump.js",["278","279"],"import React from 'react'\nimport { Row, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\n\nconst ExternalJump = props => {\n\n\n  return (\n    <Row>\n      <a href={props.link} target=\"_blank\" className=\"mb-2 btn btn-block text-left btn-link\" >{props.message} <FA className=\"float-right\" icon={props.icon} /></a>\n    </Row>\n  )\n}\n\nexport default ExternalJump\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/GetRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/AppContainer.js",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":1,"column":8,"nodeType":"286","messageId":"287","endLine":1,"endColumn":12},{"ruleId":"284","severity":1,"message":"288","line":5,"column":21,"nodeType":"286","messageId":"287","endLine":5,"endColumn":24},{"ruleId":"284","severity":1,"message":"289","line":5,"column":26,"nodeType":"286","messageId":"287","endLine":5,"endColumn":29},{"ruleId":"284","severity":1,"message":"290","line":5,"column":31,"nodeType":"286","messageId":"287","endLine":5,"endColumn":37},{"ruleId":"284","severity":1,"message":"291","line":5,"column":39,"nodeType":"286","messageId":"287","endLine":5,"endColumn":45},{"ruleId":"284","severity":1,"message":"292","line":5,"column":47,"nodeType":"286","messageId":"287","endLine":5,"endColumn":50},{"ruleId":"284","severity":1,"message":"293","line":5,"column":52,"nodeType":"286","messageId":"287","endLine":5,"endColumn":63},{"ruleId":"284","severity":1,"message":"292","line":2,"column":18,"nodeType":"286","messageId":"287","endLine":2,"endColumn":21},{"ruleId":"284","severity":1,"message":"293","line":2,"column":23,"nodeType":"286","messageId":"287","endLine":2,"endColumn":34},{"ruleId":"284","severity":1,"message":"294","line":2,"column":36,"nodeType":"286","messageId":"287","endLine":2,"endColumn":40},{"ruleId":"284","severity":1,"message":"295","line":2,"column":42,"nodeType":"286","messageId":"287","endLine":2,"endColumn":53},{"ruleId":"284","severity":1,"message":"296","line":2,"column":63,"nodeType":"286","messageId":"287","endLine":2,"endColumn":74},{"ruleId":"284","severity":1,"message":"297","line":2,"column":76,"nodeType":"286","messageId":"287","endLine":2,"endColumn":81},{"ruleId":"298","severity":1,"message":"299","line":11,"column":53,"nodeType":"300","endLine":11,"endColumn":95},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"302","line":8,"column":10,"nodeType":"286","messageId":"287","endLine":8,"endColumn":15},{"ruleId":"284","severity":1,"message":"303","line":8,"column":17,"nodeType":"286","messageId":"287","endLine":8,"endColumn":25},{"ruleId":"284","severity":1,"message":"304","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":19},{"ruleId":"284","severity":1,"message":"305","line":2,"column":32,"nodeType":"286","messageId":"287","endLine":2,"endColumn":43},{"ruleId":"284","severity":1,"message":"290","line":2,"column":45,"nodeType":"286","messageId":"287","endLine":2,"endColumn":51},{"ruleId":"284","severity":1,"message":"297","line":2,"column":53,"nodeType":"286","messageId":"287","endLine":2,"endColumn":58},{"ruleId":"284","severity":1,"message":"288","line":2,"column":60,"nodeType":"286","messageId":"287","endLine":2,"endColumn":63},{"ruleId":"306","severity":1,"message":"307","line":21,"column":89,"nodeType":"308","messageId":"309","endLine":21,"endColumn":91},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"294","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":20},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"310","severity":1,"message":"311","line":14,"column":5,"nodeType":"312","endLine":14,"endColumn":14,"suggestions":"313"},{"ruleId":"284","severity":1,"message":"314","line":16,"column":9,"nodeType":"286","messageId":"287","endLine":16,"endColumn":21},{"ruleId":"310","severity":1,"message":"315","line":82,"column":6,"nodeType":"312","endLine":82,"endColumn":8,"suggestions":"316"},{"ruleId":"310","severity":1,"message":"317","line":124,"column":6,"nodeType":"312","endLine":124,"endColumn":16,"suggestions":"318"},{"ruleId":"284","severity":1,"message":"319","line":6,"column":3,"nodeType":"286","messageId":"287","endLine":6,"endColumn":17},{"ruleId":"284","severity":1,"message":"320","line":7,"column":3,"nodeType":"286","messageId":"287","endLine":7,"endColumn":14},{"ruleId":"284","severity":1,"message":"321","line":9,"column":3,"nodeType":"286","messageId":"287","endLine":9,"endColumn":15},{"ruleId":"284","severity":1,"message":"322","line":10,"column":3,"nodeType":"286","messageId":"287","endLine":10,"endColumn":15},{"ruleId":"323","severity":1,"message":"324","line":23,"column":5,"nodeType":"325","messageId":"326","endLine":34,"endColumn":6},{"ruleId":"284","severity":1,"message":"304","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":19},{"ruleId":"284","severity":1,"message":"301","line":2,"column":21,"nodeType":"286","messageId":"287","endLine":2,"endColumn":25},{"ruleId":"284","severity":1,"message":"290","line":2,"column":27,"nodeType":"286","messageId":"287","endLine":2,"endColumn":33},{"ruleId":"284","severity":1,"message":"288","line":2,"column":35,"nodeType":"286","messageId":"287","endLine":2,"endColumn":38},{"ruleId":"284","severity":1,"message":"289","line":2,"column":40,"nodeType":"286","messageId":"287","endLine":2,"endColumn":43},{"ruleId":"284","severity":1,"message":"327","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":25},{"ruleId":"284","severity":1,"message":"328","line":5,"column":3,"nodeType":"286","messageId":"287","endLine":5,"endColumn":13},{"ruleId":"284","severity":1,"message":"319","line":6,"column":3,"nodeType":"286","messageId":"287","endLine":6,"endColumn":17},{"ruleId":"284","severity":1,"message":"320","line":7,"column":3,"nodeType":"286","messageId":"287","endLine":7,"endColumn":14},{"ruleId":"284","severity":1,"message":"329","line":8,"column":3,"nodeType":"286","messageId":"287","endLine":8,"endColumn":14},{"ruleId":"284","severity":1,"message":"321","line":9,"column":3,"nodeType":"286","messageId":"287","endLine":9,"endColumn":15},{"ruleId":"284","severity":1,"message":"322","line":10,"column":3,"nodeType":"286","messageId":"287","endLine":10,"endColumn":15},{"ruleId":"284","severity":1,"message":"330","line":11,"column":3,"nodeType":"286","messageId":"287","endLine":11,"endColumn":15},{"ruleId":"284","severity":1,"message":"331","line":12,"column":3,"nodeType":"286","messageId":"287","endLine":12,"endColumn":9},{"ruleId":"284","severity":1,"message":"332","line":13,"column":3,"nodeType":"286","messageId":"287","endLine":13,"endColumn":13},{"ruleId":"284","severity":1,"message":"333","line":14,"column":3,"nodeType":"286","messageId":"287","endLine":14,"endColumn":9},{"ruleId":"323","severity":1,"message":"324","line":30,"column":5,"nodeType":"325","messageId":"326","endLine":41,"endColumn":6},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":22},{"ruleId":"284","severity":1,"message":"334","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":15},{"ruleId":"284","severity":1,"message":"335","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":14},{"ruleId":"284","severity":1,"message":"336","line":4,"column":16,"nodeType":"286","messageId":"287","endLine":4,"endColumn":23},{"ruleId":"284","severity":1,"message":"337","line":5,"column":24,"nodeType":"286","messageId":"287","endLine":5,"endColumn":44},{"ruleId":"284","severity":1,"message":"338","line":5,"column":59,"nodeType":"286","messageId":"287","endLine":5,"endColumn":73},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":22},{"ruleId":"284","severity":1,"message":"334","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":15},{"ruleId":"284","severity":1,"message":"335","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":14},{"ruleId":"284","severity":1,"message":"336","line":4,"column":16,"nodeType":"286","messageId":"287","endLine":4,"endColumn":23},{"ruleId":"284","severity":1,"message":"337","line":8,"column":3,"nodeType":"286","messageId":"287","endLine":8,"endColumn":23},{"ruleId":"284","severity":1,"message":"339","line":9,"column":3,"nodeType":"286","messageId":"287","endLine":9,"endColumn":25},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":22},{"ruleId":"284","severity":1,"message":"334","line":3,"column":10,"nodeType":"286","messageId":"287","endLine":3,"endColumn":15},{"ruleId":"284","severity":1,"message":"335","line":4,"column":10,"nodeType":"286","messageId":"287","endLine":4,"endColumn":14},{"ruleId":"284","severity":1,"message":"336","line":4,"column":16,"nodeType":"286","messageId":"287","endLine":4,"endColumn":23},{"ruleId":"284","severity":1,"message":"337","line":5,"column":24,"nodeType":"286","messageId":"287","endLine":5,"endColumn":44},{"ruleId":"284","severity":1,"message":"340","line":5,"column":46,"nodeType":"286","messageId":"287","endLine":5,"endColumn":57},{"ruleId":"284","severity":1,"message":"341","line":5,"column":59,"nodeType":"286","messageId":"287","endLine":5,"endColumn":74},{"ruleId":"284","severity":1,"message":"342","line":12,"column":10,"nodeType":"286","messageId":"287","endLine":12,"endColumn":15},{"ruleId":"284","severity":1,"message":"343","line":12,"column":17,"nodeType":"286","messageId":"287","endLine":12,"endColumn":25},{"ruleId":"284","severity":1,"message":"344","line":14,"column":9,"nodeType":"286","messageId":"287","endLine":14,"endColumn":24},{"ruleId":"284","severity":1,"message":"290","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":16},{"ruleId":"284","severity":1,"message":"301","line":2,"column":18,"nodeType":"286","messageId":"287","endLine":2,"endColumn":22},{"ruleId":"284","severity":1,"message":"345","line":6,"column":7,"nodeType":"286","messageId":"287","endLine":6,"endColumn":12},{"ruleId":"346","severity":1,"message":"347","line":53,"column":1,"nodeType":"348","endLine":285,"endColumn":3},{"ruleId":"284","severity":1,"message":"297","line":2,"column":39,"nodeType":"286","messageId":"287","endLine":2,"endColumn":44},{"ruleId":"284","severity":1,"message":"349","line":7,"column":3,"nodeType":"286","messageId":"287","endLine":7,"endColumn":12},{"ruleId":"284","severity":1,"message":"320","line":8,"column":3,"nodeType":"286","messageId":"287","endLine":8,"endColumn":14},{"ruleId":"306","severity":1,"message":"307","line":62,"column":20,"nodeType":"308","messageId":"309","endLine":62,"endColumn":22},{"ruleId":"306","severity":1,"message":"307","line":71,"column":20,"nodeType":"308","messageId":"309","endLine":71,"endColumn":22},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"294","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":20},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"290","line":2,"column":22,"nodeType":"286","messageId":"287","endLine":2,"endColumn":28},{"ruleId":"284","severity":1,"message":"350","line":2,"column":21,"nodeType":"286","messageId":"287","endLine":2,"endColumn":26},{"ruleId":"284","severity":1,"message":"351","line":8,"column":3,"nodeType":"286","messageId":"287","endLine":8,"endColumn":20},{"ruleId":"284","severity":1,"message":"352","line":3,"column":8,"nodeType":"286","messageId":"287","endLine":3,"endColumn":21},{"ruleId":"284","severity":1,"message":"301","line":2,"column":10,"nodeType":"286","messageId":"287","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"294","line":2,"column":16,"nodeType":"286","messageId":"287","endLine":2,"endColumn":20},{"ruleId":"284","severity":1,"message":"304","line":2,"column":30,"nodeType":"286","messageId":"287","endLine":2,"endColumn":39},{"ruleId":"284","severity":1,"message":"288","line":2,"column":21,"nodeType":"286","messageId":"287","endLine":2,"endColumn":24},{"ruleId":"284","severity":1,"message":"290","line":2,"column":26,"nodeType":"286","messageId":"287","endLine":2,"endColumn":32},{"ruleId":"284","severity":1,"message":"353","line":3,"column":29,"nodeType":"286","messageId":"287","endLine":3,"endColumn":31},{"ruleId":"284","severity":1,"message":"354","line":61,"column":8,"nodeType":"286","messageId":"287","endLine":61,"endColumn":11},{"ruleId":"284","severity":1,"message":"290","line":2,"column":15,"nodeType":"286","messageId":"287","endLine":2,"endColumn":21},{"ruleId":"355","severity":1,"message":"356","line":10,"column":28,"nodeType":"300","endLine":10,"endColumn":43},"no-native-reassign",["357"],"no-negated-in-lhs",["358"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavbarBrand' is defined but never used.","'Badge' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Card' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'Container' is defined but never used.","'ButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'messagesEndRef'. Either include it or remove the dependency array.","ArrayExpression",["359"],"'serverStatus' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.server' and 'setServerStatus'. Either include them or remove the dependency array. If 'setNewMessage' needs the current value of 'props.server', you can also switch to useReducer instead of useState and read 'props.server' in the reducer.",["360"],"React Hook React.useEffect has missing dependencies: 'configuration', 'dataList', 'processData', 'setConfiguration', and 'setDataList'. Either include them or remove the dependency array.",["361"],"'faNetworkWired' is defined but never used.","'faChartArea' is defined but never used.","'faFolderOpen' is defined but never used.","'faInfoCircle' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FontAwesomeIcon' is defined but never used.","'faTerminal' is defined but never used.","'faChartLine' is defined but never used.","'faWaveSquare' is defined but never used.","'faStop' is defined but never used.","'faChartBar' is defined but never used.","'faList' is defined but never used.","'Chart' is defined but never used.","'Line' is defined but never used.","'Scatter' is defined but never used.","'VictoryZoomContainer' is defined but never used.","'VictoryScatter' is defined but never used.","'VictoryCursorContainer' is defined but never used.","'VictoryLine' is defined but never used.","'VictorHistogram' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'temperatureData' is assigned a value but never used.","'label' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'faHistory' is defined but never used.","'Alert' is defined but never used.","'faExternalLinkAlt' is defined but never used.","'ReactMarkdown' is defined but never used.","'FA' is defined but never used.","'sdk' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},"Update the dependencies array to be: [content, messagesEndRef]",{"range":"368","text":"369"},"Update the dependencies array to be: [props.server, setServerStatus]",{"range":"370","text":"371"},"Update the dependencies array to be: [configuration, dataList, incoming, processData, setConfiguration, setDataList]",{"range":"372","text":"373"},[404,413],"[content, messagesEndRef]",[2749,2751],"[props.server, setServerStatus]",[3736,3746],"[configuration, dataList, incoming, processData, setConfiguration, setDataList]"]