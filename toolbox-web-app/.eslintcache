[{"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js":"1","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js":"2","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js":"3","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js":"4","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js":"5","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js":"6","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Terminal.js":"7","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js":"8","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Insights.js":"9","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/InsightDetail.js":"10","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Plot.js":"11","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Logic.js":"12","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Histogram.js":"13","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Log.js":"14","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Theme.js":"15","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js":"16","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Flash.js":"17","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Trace.js":"18","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Settings.js":"19","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Property.js":"20","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Bitrate.js":"21","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Boolean.js":"22","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Delegate.js":"23","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/QuickStart.js":"24","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/About.js":"25","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Files.js":"26","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/Section.js":"27","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Reference.js":"28","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/InternalJump.js":"29","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/ExternalJump.js":"30","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/GetRequest.js":"31","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/AppContainer.js":"32","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/contexts/NetworkContext.js":"33","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TextInput.js":"34","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/FlashSettings.js":"35","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/DebugSettings.js":"36","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TraceSettings.js":"37","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/LoadingSpinner.js":"38","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PostRequest.js":"39","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PutRequest.js":"40","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/UserFileUpload.js":"41","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/CopyCommand.js":"42","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/FlashFileUpload.js":"43","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/ApiRequest.js":"44"},{"size":500,"mtime":1608776256516,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1608776256517,"results":"47","hashOfConfig":"46"},{"size":3969,"mtime":1613621991227,"results":"48","hashOfConfig":"46"},{"size":714,"mtime":1612763886499,"results":"49","hashOfConfig":"46"},{"size":746,"mtime":1612135292304,"results":"50","hashOfConfig":"46"},{"size":1903,"mtime":1612763961239,"results":"51","hashOfConfig":"46"},{"size":491,"mtime":1612135591885,"results":"52","hashOfConfig":"46"},{"size":4179,"mtime":1612056856624,"results":"53","hashOfConfig":"46"},{"size":1806,"mtime":1612135405155,"results":"54","hashOfConfig":"46"},{"size":923,"mtime":1612135431989,"results":"55","hashOfConfig":"46"},{"size":455,"mtime":1612135745365,"results":"56","hashOfConfig":"46"},{"size":2722,"mtime":1612135759970,"results":"57","hashOfConfig":"46"},{"size":505,"mtime":1612135871795,"results":"58","hashOfConfig":"46"},{"size":849,"mtime":1612135808994,"results":"59","hashOfConfig":"46"},{"size":5847,"mtime":1609431513731,"results":"60","hashOfConfig":"46"},{"size":2020,"mtime":1613621348764,"results":"61","hashOfConfig":"46"},{"size":4904,"mtime":1614048054940,"results":"62","hashOfConfig":"46"},{"size":1153,"mtime":1612764345005,"results":"63","hashOfConfig":"46"},{"size":4548,"mtime":1612722015209,"results":"64","hashOfConfig":"46"},{"size":780,"mtime":1611982033323,"results":"65","hashOfConfig":"46"},{"size":353,"mtime":1613621513634,"results":"66","hashOfConfig":"46"},{"size":477,"mtime":1612757617582,"results":"67","hashOfConfig":"46"},{"size":809,"mtime":1612895315556,"results":"68","hashOfConfig":"46"},{"size":2044,"mtime":1612136183461,"results":"69","hashOfConfig":"46"},{"size":722,"mtime":1612135637668,"results":"70","hashOfConfig":"46"},{"size":5290,"mtime":1612761745128,"results":"71","hashOfConfig":"46"},{"size":457,"mtime":1611989913948,"results":"72","hashOfConfig":"46"},{"size":12416,"mtime":1614046261145,"results":"73","hashOfConfig":"46"},{"size":497,"mtime":1612036607470,"results":"74","hashOfConfig":"46"},{"size":439,"mtime":1612135908270,"results":"75","hashOfConfig":"46"},{"size":2006,"mtime":1612135785483,"results":"76","hashOfConfig":"46"},{"size":228,"mtime":1612029048993,"results":"77","hashOfConfig":"46"},{"size":222,"mtime":1614031251039,"results":"78","hashOfConfig":"46"},{"size":473,"mtime":1612060668629,"results":"79","hashOfConfig":"46"},{"size":2661,"mtime":1613621876033,"results":"80","hashOfConfig":"46"},{"size":1895,"mtime":1612721881328,"results":"81","hashOfConfig":"46"},{"size":941,"mtime":1612721926085,"results":"82","hashOfConfig":"46"},{"size":330,"mtime":1612135851948,"results":"83","hashOfConfig":"46"},{"size":2009,"mtime":1612135792156,"results":"84","hashOfConfig":"46"},{"size":2006,"mtime":1612135843317,"results":"85","hashOfConfig":"46"},{"size":3832,"mtime":1612762659130,"results":"86","hashOfConfig":"46"},{"size":465,"mtime":1612136169498,"results":"87","hashOfConfig":"46"},{"size":3684,"mtime":1614047405152,"results":"88","hashOfConfig":"46"},{"size":1245,"mtime":1614047639568,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"1r4for7",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"92"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"92"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"92"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js",[],["186","187"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js",["188","189","190"],"import React from 'react'\nimport { Navbar, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight, faSync, faStop } from '@fortawesome/free-solid-svg-icons'\n\nconst Top = props => {\n\n  const serverStatus = props.serverStatus;\n\n  return (\n    <Navbar bg=\"light\" expand=\"sm\" className=\"mb-2 border-bottom navbar-expand-lg\">\n      <Button variant=\"outline-secondary\" className=\"mr-2\" onClick={() => props.menuClicked() }><FontAwesomeIcon icon={faChevronRight} rotation={props.isSidebarOpen ? 180 : 0}/></Button>\n      <Navbar.Brand href=\"#home\" className=\"ml-auto\">{props.page} | Stratify Toolbox</Navbar.Brand>\n    </Navbar>\n  )\n}\n\nexport default Top\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js",["191"],"import React from 'react'\nimport { ListGroup  } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faBook,\n  faNetworkWired,\n  faChartArea,\n  faFolderOpen,\n  faInfoCircle,\n  faBug,\n  faBolt,\n  faWaveSquare,\n  faPlay,\n  faSlidersH,\n  faTerminal\n} from '@fortawesome/free-solid-svg-icons'\n\n\nconst Item = props => {\n  return (\n    <ListGroup.Item action onClick={() => props.setPage(props.name)} active={props.page === props.name}>\n      <FontAwesomeIcon icon={props.icon} /> {props.name}\n    </ListGroup.Item>\n  )\n}\n\nconst SideBar = props => {\n\n  return (\n    <div>\n      <h5 className=\"ml-2 mr-2\">TARGET</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faBug} name=\"Debug\" page={props.page} />\n        <Item setPage={props.setPage} icon={faBolt} name=\"Flash\" page={props.page} />\n        <Item setPage={props.setPage} icon={faWaveSquare} name=\"Trace\" page={props.page} />\n        <Item setPage={props.setPage} icon={faTerminal} name=\"Terminal\" page={props.page} />\n        <Item setPage={props.setPage} icon={faChartArea} name=\"Insights\" page={props.page} />\n      </ListGroup>\n      <h5 className=\"ml-2 mr-2\">TOOLBOX</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faSlidersH} name=\"Settings\" page={props.page} />\n        <Item setPage={props.setPage} icon={faFolderOpen} name=\"Files\" page={props.page} />\n      </ListGroup>\n      <h5 className=\"ml-2 mr-2\">DOCS</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faPlay} name=\"Quick Start\" page={props.page} />\n        <Item setPage={props.setPage} icon={faBook} name=\"Reference\" page={props.page} />\n        <Item setPage={props.setPage} icon={faInfoCircle} name=\"About\" page={props.page} />\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default SideBar\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Terminal.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js",["192","193","194","195"],"import React from 'react'\nimport { Toast } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\n\nconst DebugClient = props => {\n\n  const [incoming, setIncoming] = React.useState(\"\");\n  const [newMessage, setNewMessage] = React.useState(\"\");\n\n  const configuration = props.configuration;\n  const setConfiguration = props.setConfiguration;\n  const dataList = props.data;\n  const setDataList = props.setData;\n  const serverStatus = props.serverStatus;\n  const setServerStatus = props.setServerStatus;\n\n  function processData(dataName, value, configurationNext) {\n    const dataItem = dataList[dataName];\n    if (dataItem !== undefined && dataItem.configurations !== undefined) {\n      //add the input to each output\n      dataItem.configurations.forEach((configurationName, index) => {\n        if (configurationNext[configurationName] !== undefined && configurationNext[configurationName].data[dataName] !== undefined) {\n          configurationNext[configurationName].data[dataName].push(value);\n        }\n      })\n    }\n  }\n\n  function processConfig(configurationName, item, configurationNext, dataListNext) {\n    //make sure item is valid\n    if (item.data !== undefined && item.type !== undefined) {\n      //item type must be plot, hist, log, raw, etc\n      if (configurationNext[configurationName] === undefined) {\n        configurationNext[configurationName] = item;\n      }\n\n      //now associate the data with the configuration in the data list\n      const dataKeys = Object.keys(item.data);\n      dataKeys.forEach((dataName, index) => {\n        if (dataListNext[dataName] === undefined) {\n          dataListNext[dataName] = {\n            configurations: [configurationName]\n          }\n        } else {\n          let configurationList = dataListNext[dataName].configurations;\n          if (configurationList.indexOf(configurationName) < 0) {\n            configurationList.push(configurationName);\n          }\n        }\n      });\n    }\n  }\n\n  /*\n  React.useEffect(() => {\n    console.log(\"create new event source\");\n \n\n    const source = new EventSource(`${props.server}/terminal`);\n\n \n    source.onopen = function (event) {\n      setNewMessage(`connected to ${props.server}`);\n      setServerStatus(\"success\");\n    }\n\n    source.addEventListener('error', function (e) {\n      setNewMessage(`failed to connect to ${props.server}`);\n      setServerStatus(\"danger\");\n    }, false);\n\n    source.onmessage = function (event) {\n      setIncoming(String(event.data));\n    }\n    \n\n\n    return () => {\n      setServerStatus(\"danger\");\n      setNewMessage(`closed connection to ${props.server}`);\n      console.log(\"cleanup event source\");\n      source.close();\n    }\n\n  }, [])\n  */\n\n  React.useEffect(() => {\n    const lines = String(incoming).split(\"\\n\");\n\n    let configurationNext = Object.assign({}, configuration);\n    let dataListNext = Object.assign({}, dataList);\n\n    function processItem(item) {\n      const keys = Object.keys(item);\n\n      keys.forEach((key) => {\n        if (item[key].type !== undefined) {\n          processConfig(key, item[key], configurationNext, dataListNext);\n        } else {\n          processData(key, item[key], configurationNext);\n        }\n      });\n\n    }\n\n    lines.forEach((item, index) => {\n      if (item.length > 0) {\n        try {\n          const value = JSON.parse(item);\n          if (Array.isArray(value)) {\n            value.forEach((item, index) => {\n              processItem(item);\n            })\n          } else {\n            processItem(value);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n\n      }\n    })\n\n    setDataList(dataListNext);\n    setConfiguration(configurationNext);\n\n  }, [incoming])\n\n  return (\n    <div>\n      <Toast\n        style={{\n          position: 'absolute',\n          top: 75,\n          right: 10,\n        }}\n        autohide={true}\n        animation={true}\n        show={newMessage !== \"\"}\n        onClose={() => { setNewMessage(\"\") }}\n      >\n        <Toast.Body><FontAwesomeIcon icon={faInfo} /> {newMessage}</Toast.Body>\n      </Toast>\n    </div>\n  )\n}\n\nexport default DebugClient\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Insights.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/InsightDetail.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Plot.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Logic.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Histogram.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Log.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Theme.js",["196"],"import { assign } from \"lodash\";\n\n// *\n// * Colors\n// *\nconst yellow200 = \"#FFF59D\";\nconst deepOrange600 = \"#F4511E\";\nconst lime300 = \"#DCE775\";\nconst lightGreen500 = \"#8BC34A\";\nconst teal700 = \"#00796B\";\nconst cyan900 = \"#006064\";\nconst blueGrey50 = \"#ECEFF1\";\nconst blueGrey300 = \"#90A4AE\";\nconst blueGrey700 = \"#455A64\";\nconst grey900 = \"#212121\";\nconst colors = [deepOrange600, blueGrey300, lime300, lightGreen500, teal700, cyan900, yellow200];\n// *\n// * Typography\n// *\nconst sansSerif = \"'Helvetica Neue', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 500,\n  height: 100,\n  padding: { top: 5, bottom: 25, left: 25, right: 10}\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize:fontSize,\n  letterSpacing:letterSpacing,\n  padding: 1,\n  fill: blueGrey700,\n  stroke: \"transparent\",\n  strokeWidth: 0\n};\n\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\n\nexport default {\n  colors: colors,\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: grey900\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: blueGrey300,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding,\n          stroke: \"transparent\"\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"transparent\",\n          strokeDasharray,\n          strokeLinecap,\n          strokeLinejoin,\n          pointerEvents: \"painted\"\n        },\n        ticks: {\n          fill: \"transparent\",\n          size: 5,\n          stroke: blueGrey300,\n          strokeWidth: 1,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        tickLabels: assign({}, baseLabelStyles, {\n          fill: blueGrey700\n        })\n      }\n    },\n    baseProps\n  ),\n  polarDependentAxis: assign({\n    style: {\n      ticks: {\n        fill: \"transparent\",\n        size: 1,\n        stroke: \"transparent\"\n      }\n    }\n  }),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          padding,\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        maxLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        median: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        medianLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        min: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        minLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        q1: { padding, fill: blueGrey700 },\n        q1Labels: assign({}, baseLabelStyles, { padding: 3 }),\n        q3: { padding, fill: blueGrey700 },\n        q3Labels: assign({}, baseLabelStyles, { padding: 3 })\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: blueGrey700\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5 })\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: blueGrey700\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  histogram: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          stroke: grey900,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 1\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: assign(\n    {\n      colorScale: colors,\n      style: {\n        data: {\n          padding,\n          stroke: blueGrey50,\n          strokeWidth: 1\n        },\n        labels: assign({}, baseLabelStyles, { padding: 20 })\n      }\n    },\n    baseProps\n  ),\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          opacity: 1,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, baseLabelStyles, { padding: 0, pointerEvents: \"none\" }),\n    flyoutStyle: {\n      stroke: grey900,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: 5,\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n        flyout: {\n          stroke: grey900,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Debug.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Flash.js",["197","198","199","200","201","202","203"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Trace.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Settings.js",["204","205"],"import React from 'react'\n\nimport { ButtonGroup, ToggleButton, Row, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport {\n  faCheck,\n  faQuestion\n} from '@fortawesome/free-solid-svg-icons'\n\nimport AppContainer from '../components/AppContainer'\n\nimport { NetworkContext } from '../contexts/NetworkContext'\n\nimport FlashSettings from '../components/settings/FlashSettings'\nimport DebugSettings from '../components/settings/DebugSettings'\nimport TraceSettings from '../components/settings/TraceSettings'\nimport LoadingSpinner from '../components/LoadingSpinner'\n\nconst Settings = props => {\n\n  const network = React.useContext(NetworkContext);\n  const [settings, setSettings] = React.useState();\n  const [latestSettings, setLatestSettings] = React.useState();\n  const [delegateOptions, setDelegateOptions] = React.useState();\n  const [count, setCount] = React.useState();\n  const [radioValue, setRadioValue] = React.useState('debug');\n  const [isSettingsChanged, setSettingsChanged] = React.useState(false);\n\n  const radios = [\n    { type: 'debug', name: 'Debug' },\n    { type: 'flash', name: 'Flash' },\n    { type: 'trace', name: 'Trace' }\n  ];\n\n  const type = radioValue;\n\n\n  //request current settings from the device -- update the settings on the device\n  //as they are changed here\n\n  const isReady = (settings !== undefined && delegateOptions !== undefined)\n\n  function updateDelegate(value) {\n    let next_settings = settings;\n    next_settings.delegate = value;\n    console.log(`updated delegate to ${JSON.stringify(value)}`)\n    setSettings(next_settings);\n  }\n\n  console.log(`settings are ${JSON.stringify(settings)}`)\n\n  async function putSettings() {\n    console.log(`put body ${JSON.stringify(latestSettings)}`)\n    const response = await fetch(`${network.host}/${type}/settings`, {\n      method: 'PUT',\n      body: JSON.stringify(settings)\n    });\n\n    const responseJson = await response.json();\n\n    console.log(`setting put complete ${JSON.stringify(responseJson)}`)\n    setSettingsChanged(false);\n\n  }\n\n  function handleSaveSettingClicked() {\n    putSettings();\n  }\n\n  function handleSettingsChanged(value) {\n    //setSettings(value);\n    setLatestSettings(value);\n    setSettingsChanged(true);\n  }\n\n  React.useEffect(() => {\n\n    console.log(\"Try to fetch \" + type);\n\n    async function fetchSettings() {\n      const settingsResponse = await fetch(`${network.host}/${type}/settings`);\n      if (settingsResponse.ok) {\n\n      }\n      const settingsResponseJson = await settingsResponse.json();\n\n      const delegatesResponse = await fetch(`${network.host}/${type}/delegates`);\n      if (delegatesResponse.ok) {\n\n      }\n      const delegatesResponseJson = await delegatesResponse.json();\n\n      setDelegateOptions(delegatesResponseJson);\n      setSettings(settingsResponseJson);\n      setSettingsChanged(false);\n    }\n\n    fetchSettings();\n\n\n\n  }, [count, network.host, type])\n\n  function handleRadioValueChanged(value) {\n    setSettings(undefined);\n    setRadioValue(value);\n  }\n\n\n  return (\n    <AppContainer>\n      <Row>\n        <ButtonGroup toggle className=\"mb-3\" >\n          {radios.map((radio, idx) => (\n            <ToggleButton\n              key={idx}\n              type=\"radio\"\n              variant=\"primary\"\n              name=\"radio\"\n              value={radio.type}\n              checked={radioValue === radio.type}\n              onChange={(e) => handleRadioValueChanged(e.currentTarget.value)}\n            >\n              {radio.name}\n            </ToggleButton>\n          ))}\n        </ButtonGroup>\n      </Row>\n      <Row>\n        {isReady === false && <LoadingSpinner />}\n        {isReady && radioValue === 'debug' && <DebugSettings settings={settings} setSettingsChanged={handleSettingsChanged} delegateOptions={delegateOptions} />}\n        {isReady && radioValue === 'flash' && <FlashSettings settings={settings} setSettingsChanged={handleSettingsChanged} delegateOptions={delegateOptions} />}\n        {isReady && radioValue === 'trace' && <TraceSettings settings={settings} setSettingsChanged={handleSettingsChanged} delegateOptions={delegateOptions} />}\n      </Row>\n      <Row className=\"mb-3\">\n        <Button\n          disabled={!isSettingsChanged}\n          variant={isSettingsChanged ? `warning` : `success`}\n          onClick={handleSaveSettingClicked}\n        >{isSettingsChanged ? `Save Settings` : `Settings Saved`} <FA icon={isSettingsChanged ? faQuestion : faCheck} /></Button>\n      </Row>\n    </AppContainer>\n  )\n}\n\nexport default Settings\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Property.js",["206"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Bitrate.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Boolean.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/Delegate.js",["207"],"import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nconst Delegate = props => {\n\n  const [delegate, setDelegate] = React.useState(props.delegate);\n\n  function updateDelegate(key){\n    setDelegate(key);\n    props.setDelegate(key);\n  }\n\n  function getVariant(key){\n    return delegate === key ? 'secondary' : 'outline-secondary'\n  }\n\n  function getDelegateString(delegate){\n    return `${delegate}`\n  }\n\n  return (\n    <div>\n      <h5>Delegate (interface/family)</h5>\n      { Object.keys(props.options).map((key, index) => {\n        return <Button key={key} className=\"mr-2 mb-2\" variant={getVariant(key)} onClick={() => updateDelegate(key) }\n      >{key}</Button>\n      })}\n      <p className=\"text-muted\">\n        Select the delegate to use.\n    </p>\n    </div>\n  )\n}\n\nexport default Delegate\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/QuickStart.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/About.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Files.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/Section.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Reference.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/InternalJump.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/ExternalJump.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/GetRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/AppContainer.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/contexts/NetworkContext.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TextInput.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/FlashSettings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/DebugSettings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/settings/TraceSettings.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/LoadingSpinner.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PostRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/PutRequest.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/UserFileUpload.js",["208"],"import React from 'react'\nimport { Form, Card, Button } from 'react-bootstrap'\nimport { useDropzone } from 'react-dropzone'\n\nimport { FontAwesomeIcon as FA } from '@fortawesome/react-fontawesome'\nimport {\n  faBoxOpen,\n  faBullseye,\n  faFolderOpen,\n  faSpinner\n} from '@fortawesome/free-solid-svg-icons'\n\nimport AppContainer from './AppContainer'\nimport { NetworkContext } from '../contexts/NetworkContext'\n\nconst UserFileUpload = props => {\n\n  let count = 0;\n  const [isOverwrite, setOverwrite] = React.useState(false);\n  const [isUploadBusy, setUploadBusy] = React.useState(false);\n  const network = React.useContext(NetworkContext);\n\n  async function uploadFile(url, data) {\n    let method = isOverwrite ? 'PUT' : 'POST';\n\n    console.log(`attempt to upload to ${url} using ${method}`);\n    const response = await fetch(url, {\n      method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      headers: {\n        'Content-Type': 'application/blob'\n      },\n      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n      body: data // body data type must match \"Content-Type\" header\n    }).catch((e) => {\n      console.log(`failed to upload ${e}`)\n    });\n    console.log(\"call file complete\" + props.onFileComplete);\n    count = count - 1;\n    if (count === 0) {\n      props.onFileComplete !== undefined && props.onFileComplete(url)\n    }\n    setUploadBusy(false);\n    return response !== undefined ? response.json() : null; // parses JSON response into native JavaScript objects\n  }\n\n  async function readAndUploadFile(file) {\n    const reader = new FileReader()\n    reader.onabort = () => console.log('file reading was aborted')\n    reader.onerror = () => console.log('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      uploadFile(`${network.host}/fs/home/user/${file.path}`, reader.result)\n    }\n\n    await reader.readAsArrayBuffer(file)\n  }\n\n  async function uploadFileList(list) {\n    setUploadBusy(true);\n    count = list.length;\n    props.onStart !== undefined && props.onStart(list)\n    await list.forEach((file) => {\n      readAndUploadFile(file)\n    })\n  }\n\n\n  const onDrop = React.useCallback(acceptedFiles => {\n    // Do something with the files\n    uploadFileList(acceptedFiles);\n\n    //ensure length does not exceed PATH_MAX\n    //uploadFile(`${network.host}/fs/home/user/${acceptedFiles[0].path}`)\n\n\n  }, [])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n\n  function toggleOverwrite() {\n    setOverwrite(!isOverwrite);\n    console.log(`is overwrite ${!isOverwrite}`)\n  }\n\n  return (\n    <AppContainer>\n      <Form>\n        <Form.Group controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\" label=\"Overwrite Existing Files\" defaultChecked={isOverwrite} onChange={toggleOverwrite} />\n        </Form.Group>\n      </Form>\n      <Card className=\"text-center\" style={{ cursor: \"pointer\" }}>\n        <Card.Body {...getRootProps()}>\n          <input {...getInputProps()} />\n          {isUploadBusy === false && <div><p>Drop file here</p>\n            {\n              isDragActive ?\n                <p><FA icon={faBullseye} size=\"2x\" /></p> : <p><FA icon={faBoxOpen} size=\"2x\" /></p>\n            }\n            <p><Button variant=\"light\"><FA icon={faFolderOpen} /> Select File</Button></p>\n          </div>}\n          {isUploadBusy === true && <div>\n            <p><FA icon={faSpinner} spin size=\"2x\" /></p>\n            <p>Uploading Files...</p>\n          </div>}\n        </Card.Body>\n      </Card>\n    </AppContainer>\n  )\n}\n\nexport default UserFileUpload\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/docs/CopyCommand.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/FlashFileUpload.js",["209","210","211","212","213","214"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/ApiRequest.js",["215","216","217","218","219","220","221","222","223","224","225","226","227","228"],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":4,"column":26,"nodeType":"235","messageId":"236","endLine":4,"endColumn":32},{"ruleId":"233","severity":1,"message":"237","line":4,"column":34,"nodeType":"235","messageId":"236","endLine":4,"endColumn":40},{"ruleId":"233","severity":1,"message":"238","line":8,"column":9,"nodeType":"235","messageId":"236","endLine":8,"endColumn":21},{"ruleId":"233","severity":1,"message":"239","line":6,"column":3,"nodeType":"235","messageId":"236","endLine":6,"endColumn":17},{"ruleId":"233","severity":1,"message":"240","line":9,"column":20,"nodeType":"235","messageId":"236","endLine":9,"endColumn":31},{"ruleId":"233","severity":1,"message":"238","line":16,"column":9,"nodeType":"235","messageId":"236","endLine":16,"endColumn":21},{"ruleId":"233","severity":1,"message":"241","line":17,"column":9,"nodeType":"235","messageId":"236","endLine":17,"endColumn":24},{"ruleId":"242","severity":1,"message":"243","line":130,"column":6,"nodeType":"244","endLine":130,"endColumn":16,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":53,"column":1,"nodeType":"248","endLine":285,"endColumn":3},{"ruleId":"233","severity":1,"message":"249","line":2,"column":18,"nodeType":"235","messageId":"236","endLine":2,"endColumn":29},{"ruleId":"233","severity":1,"message":"250","line":2,"column":31,"nodeType":"235","messageId":"236","endLine":2,"endColumn":43},{"ruleId":"233","severity":1,"message":"251","line":12,"column":3,"nodeType":"235","messageId":"236","endLine":12,"endColumn":15},{"ruleId":"242","severity":1,"message":"252","line":48,"column":6,"nodeType":"244","endLine":48,"endColumn":20,"suggestions":"253"},{"ruleId":"233","severity":1,"message":"254","line":50,"column":12,"nodeType":"235","messageId":"236","endLine":50,"endColumn":33},{"ruleId":"233","severity":1,"message":"255","line":59,"column":12,"nodeType":"235","messageId":"236","endLine":59,"endColumn":27},{"ruleId":"233","severity":1,"message":"256","line":92,"column":12,"nodeType":"235","messageId":"236","endLine":92,"endColumn":28},{"ruleId":"233","severity":1,"message":"257","line":25,"column":17,"nodeType":"235","messageId":"236","endLine":25,"endColumn":25},{"ruleId":"233","severity":1,"message":"258","line":43,"column":12,"nodeType":"235","messageId":"236","endLine":43,"endColumn":26},{"ruleId":"233","severity":1,"message":"259","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"260","line":17,"column":12,"nodeType":"235","messageId":"236","endLine":17,"endColumn":29},{"ruleId":"242","severity":1,"message":"261","line":78,"column":6,"nodeType":"244","endLine":78,"endColumn":8,"suggestions":"262"},{"ruleId":"233","severity":1,"message":"263","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"264","line":7,"column":3,"nodeType":"235","messageId":"236","endLine":7,"endColumn":12},{"ruleId":"233","severity":1,"message":"265","line":14,"column":8,"nodeType":"235","messageId":"236","endLine":14,"endColumn":20},{"ruleId":"233","severity":1,"message":"266","line":20,"column":10,"nodeType":"235","messageId":"236","endLine":20,"endColumn":21},{"ruleId":"233","severity":1,"message":"267","line":20,"column":23,"nodeType":"235","messageId":"236","endLine":20,"endColumn":35},{"ruleId":"242","severity":1,"message":"261","line":89,"column":6,"nodeType":"244","endLine":89,"endColumn":8,"suggestions":"268"},{"ruleId":"233","severity":1,"message":"269","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":15},{"ruleId":"233","severity":1,"message":"270","line":2,"column":17,"nodeType":"235","messageId":"236","endLine":2,"endColumn":20},{"ruleId":"233","severity":1,"message":"271","line":2,"column":22,"nodeType":"235","messageId":"236","endLine":2,"endColumn":25},{"ruleId":"233","severity":1,"message":"263","line":2,"column":27,"nodeType":"235","messageId":"236","endLine":2,"endColumn":31},{"ruleId":"233","severity":1,"message":"272","line":2,"column":33,"nodeType":"235","messageId":"236","endLine":2,"endColumn":39},{"ruleId":"233","severity":1,"message":"273","line":2,"column":41,"nodeType":"235","messageId":"236","endLine":2,"endColumn":50},{"ruleId":"233","severity":1,"message":"274","line":2,"column":52,"nodeType":"235","messageId":"236","endLine":2,"endColumn":62},{"ruleId":"233","severity":1,"message":"275","line":2,"column":64,"nodeType":"235","messageId":"236","endLine":2,"endColumn":75},{"ruleId":"233","severity":1,"message":"276","line":3,"column":29,"nodeType":"235","messageId":"236","endLine":3,"endColumn":31},{"ruleId":"233","severity":1,"message":"277","line":5,"column":3,"nodeType":"235","messageId":"236","endLine":5,"endColumn":10},{"ruleId":"233","severity":1,"message":"278","line":6,"column":3,"nodeType":"235","messageId":"236","endLine":6,"endColumn":10},{"ruleId":"233","severity":1,"message":"279","line":14,"column":10,"nodeType":"235","messageId":"236","endLine":14,"endColumn":24},{"ruleId":"242","severity":1,"message":"280","line":34,"column":6,"nodeType":"244","endLine":34,"endColumn":18,"suggestions":"281"},{"ruleId":"233","severity":1,"message":"282","line":36,"column":12,"nodeType":"235","messageId":"236","endLine":36,"endColumn":24},"no-native-reassign",["283"],"no-negated-in-lhs",["284"],"no-unused-vars","'faSync' is defined but never used.","Identifier","unusedVar","'faStop' is defined but never used.","'serverStatus' is assigned a value but never used.","'faNetworkWired' is defined but never used.","'setIncoming' is assigned a value but never used.","'setServerStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'configuration', 'dataList', 'processData', 'setConfiguration', and 'setDataList'. Either include them or remove the dependency array.","ArrayExpression",["285"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'ButtonGroup' is defined but never used.","'ToggleButton' is defined but never used.","'faFolderOpen' is defined but never used.","React Hook React.useEffect has a missing dependency: 'loadDirectory'. Either include it or remove the dependency array.",["286"],"'handleDiretoryChanged' is defined but never used.","'onButtonClicked' is defined but never used.","'flashPathChanged' is defined but never used.","'setCount' is assigned a value but never used.","'updateDelegate' is defined but never used.","'Card' is defined but never used.","'getDelegateString' is defined but never used.","React Hook React.useCallback has a missing dependency: 'uploadFileList'. Either include it or remove the dependency array.",["287"],"'Form' is defined but never used.","'faBoxOpen' is defined but never used.","'AppContainer' is defined but never used.","'isOverwrite' is assigned a value but never used.","'setOverwrite' is assigned a value but never used.",["288"],"'Alert' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Container' is defined but never used.","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","'FA' is defined but never used.","'faCheck' is defined but never used.","'faTimes' is defined but never used.","'responseStatus' is assigned a value but never used.","React Hook React.useEffect has a missing dependency: 'getRequest'. Either include it or remove the dependency array.",["289"],"'abortRequest' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"294","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [configuration, dataList, incoming, processData, setConfiguration, setDataList]",{"range":"299","text":"300"},"Update the dependencies array to be: [loadDirectory, network.host]",{"range":"301","text":"302"},"Update the dependencies array to be: [uploadFileList]",{"range":"303","text":"304"},{"range":"305","text":"304"},"Update the dependencies array to be: [getRequest, props.path]",{"range":"306","text":"307"},[3756,3766],"[configuration, dataList, incoming, processData, setConfiguration, setDataList]",[1504,1518],"[loadDirectory, network.host]",[2643,2645],"[uploadFileList]",[2891,2893],[969,981],"[getRequest, props.path]"]