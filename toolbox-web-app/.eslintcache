[{"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js":"1","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js":"2","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js":"3","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js":"4","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js":"5","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js":"6","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Terminal.js":"7","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js":"8","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Insights.js":"9","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/InsightDetail.js":"10","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Plot.js":"11","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Logic.js":"12","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Histogram.js":"13","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Log.js":"14","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Theme.js":"15"},{"size":500,"mtime":1608776256516,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1608776256517,"results":"18","hashOfConfig":"17"},{"size":3058,"mtime":1609433259828,"results":"19","hashOfConfig":"17"},{"size":915,"mtime":1609392017972,"results":"20","hashOfConfig":"17"},{"size":810,"mtime":1609389201512,"results":"21","hashOfConfig":"17"},{"size":1656,"mtime":1609430600334,"results":"22","hashOfConfig":"17"},{"size":530,"mtime":1609392668242,"results":"23","hashOfConfig":"17"},{"size":4162,"mtime":1609432156457,"results":"24","hashOfConfig":"17"},{"size":1842,"mtime":1609433194559,"results":"25","hashOfConfig":"17"},{"size":1223,"mtime":1609431380584,"results":"26","hashOfConfig":"17"},{"size":625,"mtime":1609432190963,"results":"27","hashOfConfig":"17"},{"size":2903,"mtime":1609433435409,"results":"28","hashOfConfig":"17"},{"size":1324,"mtime":1609432796059,"results":"29","hashOfConfig":"17"},{"size":876,"mtime":1609430249669,"results":"30","hashOfConfig":"17"},{"size":5847,"mtime":1609431513731,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1burjk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"34"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/index.js",[],["76","77"],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/reportWebVitals.js",[],"/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/App.js",["78","79","80","81","82","83","84"],"import logo from './logo.svg';\nimport React from 'react'\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Button, Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport SideBar from './components/SideBar'\nimport Top from './components/Top'\nimport DebugClient from './DebugClient'\nimport Network from './views/Network'\nimport Insights from './views/Insights'\nimport InsightDetail from './views/InsightDetail'\nimport Terminal from './views/Terminal'\nimport Sidebar from \"react-sidebar\";\n\nconst mql = window.matchMedia(`(min-width: 800px)`);\n\n\nfunction App() {\n\n  const [server, setServer] = React.useState(\"http://localhost:3002\");\n  const [serverStatus, setServerStatus] = React.useState(false);\n  const [page, setPageState] = React.useState(\"Network\");\n  const [pageName, setPageName] = React.useState(\"Network\");\n  const [isSidebarOpen, setSidebarOpen] = React.useState(true);\n  const [isSidebarDocked, setSidebarDocked] = React.useState(true);\n\n  const [configuration, setConfiguration] = React.useState({});\n  const [data, setData] = React.useState({});\n\n  const [insightConfiguration, setInsightConfiguration] = React.useState({});\n\n  function mediaQueryChanged() {\n    setSidebarDocked(mql.matches);\n    setSidebarOpen(false);\n  }\n\n  React.useEffect(() => {\n    mql.addListener(mediaQueryChanged);\n  }, [])\n\n  function onMenuClicked(){\n    setSidebarOpen(!isSidebarOpen);\n    setSidebarDocked(!isSidebarOpen);\n  }\n\n  function setInsightDetail(name, config){\n    setInsightConfiguration(config)\n    setPageState(\"InsightDetail\")\n    setPageName(`${name} ${config.type}`)\n\n  }\n\n  function setPage(value){\n    if( value !== \"InsightDetail\" ){\n      setPageState(value)\n      setPageName(value)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Sidebar\n        docked={isSidebarDocked}\n        sidebar={\n          <SideBar page={page} setPage={setPage} />}\n        styles={{ sidebar: { background: \"white\" } }}\n        open={isSidebarOpen}\n        onSetOpen={setSidebarOpen}\n      >\n        <Top \n        page={pageName} \n        menuClicked={onMenuClicked} \n        isSidebarOpen={isSidebarOpen}\n        serverStatus={serverStatus}\n        server={server}\n        />\n        <Container fluid>\n\n           <DebugClient \n           configuration={configuration}\n           setConfiguration={setConfiguration}\n           data={data}\n           setData={setData}\n           serverStatus={serverStatus}\n           setServerStatus={setServerStatus}\n           server={server} \n           \n           />\n          {page === \"Network\" && <Network server={server} setServer={setServer} />}\n          {page === \"Insights\" && \n          <Insights \n          setInsightDetail={setInsightDetail} \n          configuration={configuration} \n          />}\n          {page === \"Terminal\" && <Terminal configuration={configuration[\"output\"]}/>}\n          {page === \"InsightDetail\" && <InsightDetail configuration={insightConfiguration} />}\n        </Container>\n      </Sidebar>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/Top.js",["85","86","87","88","89","90","91"],"import React from 'react'\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, NavbarBrand, Badge } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight, faSync, faStop } from '@fortawesome/free-solid-svg-icons'\n\nconst Top = props => {\n\n  const serverStatus = props.serverStatus;\n\n  return (\n    <Navbar bg=\"light\" expand=\"sm\" className=\"mb-2\" className=\"border-bottom navbar-expand-lg\">\n      <Button variant=\"outline-secondary\" className=\"mr-2\" onClick={() => props.menuClicked() }><FontAwesomeIcon icon={faChevronRight} rotation={props.isSidebarOpen ? 180 : 0}/></Button>\n      <Button variant={serverStatus}>\n        <FontAwesomeIcon icon={serverStatus === \"success\" ? faStop : faSync} /> {props.server}\n        </Button>\n      <Navbar.Brand href=\"#home\" className=\"ml-auto\">{props.page}</Navbar.Brand>\n    </Navbar>\n  )\n}\n\nexport default Top\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Network.js",["92","93","94"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\n\n\nconst Network = props => {\n\n  const [input, setInput] = React.useState(props.server)\n\n  return (\n    <div>\n      <Form>\n        <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>Server</Form.Label>\n          <Form.Control type=\"input\" placeholder=\"http://a.b.c.d:3002\" defaultValue={props.server} onChange={(item) => {\n            props.setServer(item.target.value)\n          }} />\n          <Form.Text className=\"text-muted\">\n            IP Address of Toolbox\n          </Form.Text>\n        </Form.Group>\n        <Button variant=\"primary\" onClick={() => {\n          //ping the server to see if it is listening\n        }}>\n          Ping\n            </Button>\n      </Form>\n    </div >\n  )\n}\n\nexport default Network\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/SideBar.js",["95","96","97","98"],"import React from 'react'\nimport { Container, ListGroup, ButtonGroup, Button, Badge, Row } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTerminal, faNetworkWired, faChartArea, faFolderOpen, faInfoCircle } from '@fortawesome/free-solid-svg-icons'\n\n\nconst Item = props => {\n  return (\n    <ListGroup.Item action onClick={() => props.setPage(props.name)} active={props.page == props.name}>\n      <FontAwesomeIcon icon={props.icon} /> {props.name}\n    </ListGroup.Item>\n  )\n}\n\nconst SideBar = props => {\n\n\n  return (\n    <div>\n      <h5 className=\"ml-2 mr-2\">Stratify Toolbox</h5>\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faNetworkWired} name=\"Network\" page={props.page} />\n        <Item setPage={props.setPage} icon={faFolderOpen} name=\"Files\" page={props.page} />\n      </ListGroup>\n      <hr />\n      <h5 className=\"ml-2 mr-2\">Target</h5>\n\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faTerminal} name=\"Terminal\" page={props.page} />\n        <Item setPage={props.setPage} icon={faChartArea} name=\"Insights\" page={props.page} />\n      </ListGroup>\n      <Row className=\"mb-1 ml-1 mr-1\">\n        <Button variant=\"secondary\" size=\"lg\" block>Reset</Button>\n      </Row>\n      <Row className=\"mb-1 ml-1 mr-1\">\n        <Button variant=\"primary\" size=\"lg\" block>Flash</Button>\n      </Row>\n      <hr />\n      <ListGroup variant=\"flush\" className=\"mb-2\">\n        <Item setPage={props.setPage} icon={faInfoCircle} name=\"About\" page={props.page} />\n\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default SideBar\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Terminal.js",["99","100","101","102"],"import React from 'react'\nimport { Card, Form, Button } from 'react-bootstrap'\n\n\n\nconst Terminal = props => {\n\n  const messagesEndRef = React.createRef();\n  const content = (props.configuration !== undefined && props.configuration.data !== undefined) ? String(props.configuration.data.text.join('')) : \"\";\n\n\n  React.useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n  },[content])\n\n  return (\n    <pre>\n      {content}\n      <div ref={messagesEndRef} />\n    </pre>\n  )\n}\n\nexport default Terminal\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/DebugClient.js",["103","104","105"],"import React from 'react'\nimport { Toast } from 'react-bootstrap'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faInfo } from '@fortawesome/free-solid-svg-icons'\n\nconst DebugClient = props => {\n\n  const [incoming, setIncoming] = React.useState(\"\");\n  const [newMessage, setNewMessage] = React.useState(\"\");\n\n  const configuration = props.configuration;\n  const setConfiguration = props.setConfiguration;\n  const dataList = props.data;\n  const setDataList = props.setData;\n  const serverStatus = props.serverStatus;\n  const setServerStatus = props.setServerStatus;\n\n\n\n\n  function processData(dataName, value, configurationNext) {\n    const dataItem = dataList[dataName];\n    if (dataItem !== undefined && dataItem.configurations !== undefined) {\n      //add the input to each output\n      dataItem.configurations.forEach((configurationName, index) => {\n        if (configurationNext[configurationName] !== undefined && configurationNext[configurationName].data[dataName] !== undefined) {\n          configurationNext[configurationName].data[dataName].push(value);\n        }\n      })\n    }\n  }\n\n  function processConfig(configurationName, item, configurationNext, dataListNext) {\n    //make sure item is valid\n    if (item.data !== undefined && item.type !== undefined) {\n      //item type must be plot, hist, log, raw, etc\n      if (configurationNext[configurationName] === undefined) {\n        configurationNext[configurationName] = item;\n      }\n\n      //now associate the data with the configuration in the data list\n      const dataKeys = Object.keys(item.data);\n      dataKeys.forEach((dataName, index) => {\n        if (dataListNext[dataName] === undefined) {\n          dataListNext[dataName] = {\n            configurations: [configurationName]\n          }\n        } else {\n          let configurationList = dataListNext[dataName].configurations;\n          if (configurationList.indexOf(configurationName) < 0) {\n            configurationList.push(configurationName);\n          }\n        }\n      });\n    }\n  }\n\n  React.useEffect(() => {\n    console.log(\"create new event source\");\n    const source = new EventSource(`${props.server}/terminal`);\n\n    source.onopen = function (event) {\n      setNewMessage(`connected to ${props.server}`);\n      setServerStatus(\"success\");\n    }\n\n    source.addEventListener('error', function (e) {\n      setNewMessage(`failed to connect to ${props.server}`);\n      setServerStatus(\"danger\");\n    }, false);\n\n    source.onmessage = function (event) {\n      setIncoming(String(event.data));\n    }\n\n\n    return () => {\n      setServerStatus(\"danger\");\n      setNewMessage(`closed connection to ${props.server}`);\n      console.log(\"cleanup event source\");\n      source.close();\n    }\n\n  }, [])\n\n  React.useEffect(() => {\n    const lines = String(incoming).split(\"\\n\");\n\n    let configurationNext = Object.assign({}, configuration);\n    let dataListNext = Object.assign({}, dataList);\n\n    function processItem(item) {\n      const keys = Object.keys(item);\n\n      keys.forEach((key) => {\n        if (item[key].type !== undefined) {\n          processConfig(key, item[key], configurationNext, dataListNext);\n        } else {\n          processData(key, item[key], configurationNext);\n        }\n      });\n\n    }\n\n    lines.forEach((item, index) => {\n      if (item.length > 0) {\n        try {\n          const value = JSON.parse(item);\n          if (Array.isArray(value)) {\n            value.forEach((item, index) => {\n              processItem(item);\n            })\n          } else {\n            processItem(value);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n\n      }\n    })\n\n    setDataList(dataListNext);\n    setConfiguration(configurationNext);\n\n  }, [incoming])\n\n  return (\n    <div>\n      <Toast\n        style={{\n          position: 'absolute',\n          top: 75,\n          right: 10,\n        }}\n        autohide={true}\n        animation={true}\n        show={newMessage !== \"\"}\n        onClose={() => { setNewMessage(\"\") }}\n      >\n        <Toast.Body><FontAwesomeIcon icon={faInfo} /> {newMessage}</Toast.Body>\n      </Toast>\n    </div>\n  )\n}\n\nexport default DebugClient\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/Insights.js",["106","107","108","109","110"],"import React from 'react'\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faTerminal,\n  faNetworkWired,\n  faChartArea,\n  faChartLine,\n  faFolderOpen,\n  faInfoCircle,\n  faWaveSquare,\n  faStop,\n  faChartBar,\n  faList\n} from '@fortawesome/free-solid-svg-icons'\n\n\n\n\nconst Summary = props => {\n\n  function getIcon(type) {\n    switch (type) {\n      case \"plot\":\n        return faChartLine;\n      case \"histogram\":\n        return faChartBar;\n      case \"terminal\":\n        return faTerminal;\n      case \"logic\":\n        return faWaveSquare;\n      case \"log\":\n        return faList;\n    }\n\n    return faStop;\n  }\n\n\n  return (\n    <Card className=\"text-center\">\n      <Card.Header>\n        <h5>{props.name} {props.configuration.type}</h5>\n      </Card.Header>\n      <Card.Body>\n        <Button variant=\"outline-primary\" onClick={() => { props.setInsightDetail(props.name, props.configuration) }}><FontAwesomeIcon icon={getIcon(props.configuration.type)} size=\"4x\" /></Button>\n      </Card.Body>\n      <Card.Footer>\n        {\n          Object.keys(props.configuration.data).map((key, index) => {\n            return <span>{key} </span>\n          })\n        }\n      </Card.Footer>\n    </Card>\n  )\n}\n\n\n\nconst Insights = props => {\n\n  const configuration = props.configuration;\n\n  return (\n    <Container fluid>\n      <Row className=\"mt-2\">\n        {\n          configuration !== undefined && Object.keys(configuration).map((key, index) => {\n            return (\n              <Col md={4} className=\"mb-3\">\n                <Summary name={key} setInsightDetail={props.setInsightDetail} configuration={configuration[key]} key={key + index} />\n              </Col>\n            )\n          })\n        }\n      </Row>\n    </Container >\n  )\n}\n\nexport default Insights\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/views/InsightDetail.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127"],"import React from 'react'\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faTerminal,\n  faNetworkWired,\n  faChartArea,\n  faChartLine,\n  faFolderOpen,\n  faInfoCircle,\n  faWaveSquare,\n  faStop,\n  faChartBar,\n  faList\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Plot from '../components/insights/Plot'\nimport Logic from '../components/insights/Logic'\nimport Histogram from '../components/insights/Histogram'\nimport Log from '../components/insights/Log'\nimport Terminal from './Terminal'\n\n\n\nconst InsightDetail = props => {\n\n  const configuration = props.configuration;\n\n  function getComponent() {\n    switch (configuration.type) {\n      case \"plot\":\n        return <Plot configuration={configuration} />\n      case \"histogram\":\n        return <Histogram configuration={configuration} />\n      case \"terminal\":\n        return <Terminal configuration={configuration} />\n      case \"logic\":\n        return <Logic configuration={configuration} />\n      case \"log\":\n        return <Log configuration={configuration} />\n    }\n\n    return null;\n  }\n\n  return (<div>\n    {getComponent()}\n  </div>)\n}\n\nexport default InsightDetail\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Plot.js",["128","129","130","131","132","133","134"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport { VictoryChart, VictoryZoomContainer, VictoryLine, VictoryScatter } from \"victory\";\nimport Theme from './Theme'\n\nconst Plot = props => {\n\n  return (\n    <VictoryChart domainPadding={{ y: 5 }}\n    theme={Theme} \n    height={250}\n    >\n      { Object.keys(props.configuration.data).map((key, index) => {\n        return <VictoryLine data={props.configuration.data[key]} x={0} y={1} key={\"series\" + key} />\n      })}\n    </VictoryChart>\n  )\n}\n\nexport default Plot\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Logic.js",["135","136","137","138","139","140","141"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport {\n  createContainer,\n  VictoryChart,\n  VictoryZoomContainer,\n  VictoryCursorContainer,\n  VictoryLine,\n  VictoryBrushContainer,\n  VictoryAxis,\n  VictoryLegend\n} from \"victory\";\n\nimport Theme from './Theme'\n\n\nconst Logic = props => {\n\n  const [zoomDomain, setZoomDomain] = React.useState({ zoomDomain: { x: [] } });\n\n  function handleZoom(domain) {\n    setZoomDomain(domain);\n  }\n\n  const VictoryZoomCursorContainer = createContainer(\"zoom\", \"voronoi\");\n\n  return (\n    <div>\n      <VictoryChart domainPadding={{ y: 0 }} width={400} height={30}\n        theme={Theme}\n        padding={{ top: 5, bottom: 0, left: 25, right: 10 }}\n        containerComponent={\n          <VictoryBrushContainer\n            brushDimension=\"x\"\n            brushDomain={zoomDomain}\n            onBrushDomainChange={handleZoom}\n          />\n        }\n      >\n        <VictoryAxis style={{ axis: { strokeWidth: 0 } }} />\n        {\n          Object.keys(props.configuration.data).map((key, index) => {\n            return <VictoryLine\n              style={{ data: { stroke: Theme.colors[index] } }}\n              data={props.configuration.data[key]}\n              x={0}\n              y={1}\n              key={\"seriesBrush\" + key}\n              interpolation={'stepAfter'}\n            />\n          })\n        }\n\n      </VictoryChart>\n\n      <VictoryChart\n        theme={Theme}\n        domainPadding={{ y: 10 }} width={400} height={200}\n        padding={{ top: 40, bottom: 30, left: 25, right: 10 }}\n        containerComponent={\n          <VictoryZoomCursorContainer\n            allowZoom={false}\n            allowPan={true}\n            zoomDimension={\"x\"}\n            zoomDomain={zoomDomain}\n            onZoomDomainChange={handleZoom}\n            cursorDimension={\"x\"}\n            labels={({ datum }) => `${datum[0]}`}\n          />\n        }\n      >\n        <VictoryLegend x={100} y={175}\n          centerTitle\n          orientation=\"horizontal\"\n          gutter={20}\n          style={{ background: \"black\", border: { stroke: \"black\" }, title: { fontSize: 12 } }}\n          data={Object.keys(props.configuration.data).map((key, index) => {\n            return { name: key, symbol: { fill: Theme.colors[index], type: \"circle\" } }\n          })}\n        />\n        <VictoryAxis\n          orientation={\"top\"}\n          offsetY={30}\n\n        />\n        {Object.keys(props.configuration.data).map((key, index) => {\n          return <VictoryLine\n            style={{ data: { stroke: Theme.colors[index] } }}\n            data={props.configuration.data[key]}\n            x={0}\n            y={1}\n            key={\"series\" + key}\n            interpolation={'stepAfter'}\n            name={key}\n          />\n        })}\n\n      </VictoryChart>\n    </div>\n  )\n}\n\nexport default Logic\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Histogram.js",["142","143","144","145","146","147","148","149","150","151","152"],"import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\nimport { Chart } from 'react-charts'\nimport { Line, Scatter } from 'react-chartjs-2'\nimport { VictoryChart, VictoryZoomContainer, VictoryLine, VictorHistogram, VictoryHistogram } from \"victory\";\n\nimport Theme from './Theme'\n\n\nconst Histogram = props => {\n\n  const [count, setCount] = React.useState(0)\n\n  const temperatureData =\n    [\n      { x: 20 },\n      { x: 21 },\n      { x: 22 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 23 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 24 },\n      { x: 25 },\n      { x: 25 },\n      { x: 25 },\n      { x: 24 },\n      { x: 23 },\n      { x: 19 },\n      { x: 15 },\n      { x: 16 },\n      { x: 14 },\n      { x: 27 },\n      { x: 27 },\n      { x: 27 },\n      { x: 16 },\n      { x: 30 },\n      { x: 14 }\n    ];\n\n\n  return (\n    <VictoryChart\n      theme={Theme}\n      height={250}\n    >\n      { Object.keys(props.configuration.data).map((key, index) => {\n        return (\n          <VictoryHistogram\n            data={props.configuration.data[key]}\n            key={key}\n            x={1}\n          />\n        )\n      })}\n\n\n\n    </VictoryChart>\n  )\n}\n\nexport default Histogram\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Log.js",["153","154","155"],"import React from 'react'\nimport { Button, Card, Badge } from 'react-bootstrap'\n\nconst LogEntry = props => {\n  var variant;\n  var label;\n  if (props.type === \"debug\") {\n    variant = \"dark\"\n  } else if (props.type === \"info\") {\n    variant = \"info\"\n  } else if (props.type === \"warning\") {\n    variant = \"warning\"\n  } else if (props.type === \"error\") {\n    variant = \"danger\"\n  } else {\n    variant = \"primary\"\n  }\n\n  return (\n    <li>\n      timestamp: {props.text} <Badge pill variant={variant} className=\"float-right\">{props.type}</Badge> \n    </li>\n  )\n}\n\nconst Log = props => {\n  return (\n    <div>\n        <ul>\n          <LogEntry type=\"debug\" text=\"Hello\" />\n          <LogEntry type=\"info\" text=\"World\" />\n          <LogEntry type=\"warning\" text=\"Uh oh\" />\n          <LogEntry type=\"error\" text=\"An error happened\" />\n        </ul>\n    </div>\n  )\n}\n\nexport default Log\n","/Users/tgil/gitv4/ToolboxWebApp/toolbox-web-app/src/components/insights/Theme.js",["156"],"import { assign } from \"lodash\";\n\n// *\n// * Colors\n// *\nconst yellow200 = \"#FFF59D\";\nconst deepOrange600 = \"#F4511E\";\nconst lime300 = \"#DCE775\";\nconst lightGreen500 = \"#8BC34A\";\nconst teal700 = \"#00796B\";\nconst cyan900 = \"#006064\";\nconst blueGrey50 = \"#ECEFF1\";\nconst blueGrey300 = \"#90A4AE\";\nconst blueGrey700 = \"#455A64\";\nconst grey900 = \"#212121\";\nconst colors = [deepOrange600, blueGrey300, lime300, lightGreen500, teal700, cyan900, yellow200];\n// *\n// * Typography\n// *\nconst sansSerif = \"'Helvetica Neue', 'Helvetica', sans-serif\";\nconst letterSpacing = \"normal\";\nconst fontSize = 12;\n// *\n// * Layout\n// *\nconst padding = 8;\nconst baseProps = {\n  width: 500,\n  height: 100,\n  padding: { top: 5, bottom: 25, left: 25, right: 10}\n};\n// *\n// * Labels\n// *\nconst baseLabelStyles = {\n  fontFamily: sansSerif,\n  fontSize:fontSize,\n  letterSpacing:letterSpacing,\n  padding: 1,\n  fill: blueGrey700,\n  stroke: \"transparent\",\n  strokeWidth: 0\n};\n\nconst centeredLabelStyles = assign({ textAnchor: \"middle\" }, baseLabelStyles);\n// *\n// * Strokes\n// *\nconst strokeDasharray = \"10, 5\";\nconst strokeLinecap = \"round\";\nconst strokeLinejoin = \"round\";\n\nexport default {\n  colors: colors,\n  area: assign(\n    {\n      style: {\n        data: {\n          fill: grey900\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  axis: assign(\n    {\n      style: {\n        axis: {\n          fill: \"transparent\",\n          stroke: blueGrey300,\n          strokeWidth: 2,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        axisLabel: assign({}, centeredLabelStyles, {\n          padding,\n          stroke: \"transparent\"\n        }),\n        grid: {\n          fill: \"none\",\n          stroke: \"transparent\",\n          strokeDasharray,\n          strokeLinecap,\n          strokeLinejoin,\n          pointerEvents: \"painted\"\n        },\n        ticks: {\n          fill: \"transparent\",\n          size: 5,\n          stroke: blueGrey300,\n          strokeWidth: 1,\n          strokeLinecap,\n          strokeLinejoin\n        },\n        tickLabels: assign({}, baseLabelStyles, {\n          fill: blueGrey700\n        })\n      }\n    },\n    baseProps\n  ),\n  polarDependentAxis: assign({\n    style: {\n      ticks: {\n        fill: \"transparent\",\n        size: 1,\n        stroke: \"transparent\"\n      }\n    }\n  }),\n  bar: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          padding,\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  boxplot: assign(\n    {\n      style: {\n        max: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        maxLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        median: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        medianLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        min: { padding, stroke: blueGrey700, strokeWidth: 1 },\n        minLabels: assign({}, baseLabelStyles, { padding: 3 }),\n        q1: { padding, fill: blueGrey700 },\n        q1Labels: assign({}, baseLabelStyles, { padding: 3 }),\n        q3: { padding, fill: blueGrey700 },\n        q3Labels: assign({}, baseLabelStyles, { padding: 3 })\n      },\n      boxWidth: 20\n    },\n    baseProps\n  ),\n  candlestick: assign(\n    {\n      style: {\n        data: {\n          stroke: blueGrey700\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5 })\n      },\n      candleColors: {\n        positive: \"#ffffff\",\n        negative: blueGrey700\n      }\n    },\n    baseProps\n  ),\n  chart: baseProps,\n  errorbar: assign(\n    {\n      borderWidth: 8,\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  group: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  histogram: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          stroke: grey900,\n          strokeWidth: 2\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  legend: {\n    colorScale: colors,\n    gutter: 10,\n    orientation: \"vertical\",\n    titleOrientation: \"top\",\n    style: {\n      data: {\n        type: \"circle\"\n      },\n      labels: baseLabelStyles,\n      title: assign({}, baseLabelStyles, { padding: 5 })\n    }\n  },\n  line: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          opacity: 1,\n          stroke: blueGrey700,\n          strokeWidth: 1\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  pie: assign(\n    {\n      colorScale: colors,\n      style: {\n        data: {\n          padding,\n          stroke: blueGrey50,\n          strokeWidth: 1\n        },\n        labels: assign({}, baseLabelStyles, { padding: 20 })\n      }\n    },\n    baseProps\n  ),\n  scatter: assign(\n    {\n      style: {\n        data: {\n          fill: blueGrey700,\n          opacity: 1,\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: baseLabelStyles\n      }\n    },\n    baseProps\n  ),\n  stack: assign(\n    {\n      colorScale: colors\n    },\n    baseProps\n  ),\n  tooltip: {\n    style: assign({}, baseLabelStyles, { padding: 0, pointerEvents: \"none\" }),\n    flyoutStyle: {\n      stroke: grey900,\n      strokeWidth: 1,\n      fill: \"#f0f0f0\",\n      pointerEvents: \"none\"\n    },\n    flyoutPadding: 5,\n    cornerRadius: 5,\n    pointerLength: 10\n  },\n  voronoi: assign(\n    {\n      style: {\n        data: {\n          fill: \"transparent\",\n          stroke: \"transparent\",\n          strokeWidth: 0\n        },\n        labels: assign({}, baseLabelStyles, { padding: 5, pointerEvents: \"none\" }),\n        flyout: {\n          stroke: grey900,\n          strokeWidth: 1,\n          fill: \"#f0f0f0\",\n          pointerEvents: \"none\"\n        }\n      }\n    },\n    baseProps\n  )\n};\n",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":12},{"ruleId":"161","severity":1,"message":"165","line":5,"column":21,"nodeType":"163","messageId":"164","endLine":5,"endColumn":24},{"ruleId":"161","severity":1,"message":"166","line":5,"column":26,"nodeType":"163","messageId":"164","endLine":5,"endColumn":29},{"ruleId":"161","severity":1,"message":"167","line":5,"column":31,"nodeType":"163","messageId":"164","endLine":5,"endColumn":37},{"ruleId":"161","severity":1,"message":"168","line":5,"column":39,"nodeType":"163","messageId":"164","endLine":5,"endColumn":45},{"ruleId":"161","severity":1,"message":"169","line":5,"column":47,"nodeType":"163","messageId":"164","endLine":5,"endColumn":50},{"ruleId":"161","severity":1,"message":"170","line":5,"column":52,"nodeType":"163","messageId":"164","endLine":5,"endColumn":63},{"ruleId":"161","severity":1,"message":"169","line":2,"column":18,"nodeType":"163","messageId":"164","endLine":2,"endColumn":21},{"ruleId":"161","severity":1,"message":"170","line":2,"column":23,"nodeType":"163","messageId":"164","endLine":2,"endColumn":34},{"ruleId":"161","severity":1,"message":"171","line":2,"column":36,"nodeType":"163","messageId":"164","endLine":2,"endColumn":40},{"ruleId":"161","severity":1,"message":"172","line":2,"column":42,"nodeType":"163","messageId":"164","endLine":2,"endColumn":53},{"ruleId":"161","severity":1,"message":"173","line":2,"column":63,"nodeType":"163","messageId":"164","endLine":2,"endColumn":74},{"ruleId":"161","severity":1,"message":"174","line":2,"column":76,"nodeType":"163","messageId":"164","endLine":2,"endColumn":81},{"ruleId":"175","severity":1,"message":"176","line":11,"column":53,"nodeType":"177","endLine":11,"endColumn":95},{"ruleId":"161","severity":1,"message":"178","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"179","line":8,"column":10,"nodeType":"163","messageId":"164","endLine":8,"endColumn":15},{"ruleId":"161","severity":1,"message":"180","line":8,"column":17,"nodeType":"163","messageId":"164","endLine":8,"endColumn":25},{"ruleId":"161","severity":1,"message":"181","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"182","line":2,"column":32,"nodeType":"163","messageId":"164","endLine":2,"endColumn":43},{"ruleId":"161","severity":1,"message":"174","line":2,"column":53,"nodeType":"163","messageId":"164","endLine":2,"endColumn":58},{"ruleId":"183","severity":1,"message":"184","line":9,"column":89,"nodeType":"185","messageId":"186","endLine":9,"endColumn":91},{"ruleId":"161","severity":1,"message":"178","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"171","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":20},{"ruleId":"161","severity":1,"message":"167","line":2,"column":22,"nodeType":"163","messageId":"164","endLine":2,"endColumn":28},{"ruleId":"187","severity":1,"message":"188","line":14,"column":5,"nodeType":"189","endLine":14,"endColumn":14,"suggestions":"190"},{"ruleId":"161","severity":1,"message":"191","line":16,"column":9,"nodeType":"163","messageId":"164","endLine":16,"endColumn":21},{"ruleId":"187","severity":1,"message":"192","line":85,"column":6,"nodeType":"189","endLine":85,"endColumn":8,"suggestions":"193"},{"ruleId":"187","severity":1,"message":"194","line":127,"column":6,"nodeType":"189","endLine":127,"endColumn":16,"suggestions":"195"},{"ruleId":"161","severity":1,"message":"196","line":6,"column":3,"nodeType":"163","messageId":"164","endLine":6,"endColumn":17},{"ruleId":"161","severity":1,"message":"197","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"198","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":15},{"ruleId":"161","severity":1,"message":"199","line":10,"column":3,"nodeType":"163","messageId":"164","endLine":10,"endColumn":15},{"ruleId":"200","severity":1,"message":"201","line":23,"column":5,"nodeType":"202","messageId":"203","endLine":34,"endColumn":6},{"ruleId":"161","severity":1,"message":"181","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":19},{"ruleId":"161","severity":1,"message":"178","line":2,"column":21,"nodeType":"163","messageId":"164","endLine":2,"endColumn":25},{"ruleId":"161","severity":1,"message":"167","line":2,"column":27,"nodeType":"163","messageId":"164","endLine":2,"endColumn":33},{"ruleId":"161","severity":1,"message":"165","line":2,"column":35,"nodeType":"163","messageId":"164","endLine":2,"endColumn":38},{"ruleId":"161","severity":1,"message":"166","line":2,"column":40,"nodeType":"163","messageId":"164","endLine":2,"endColumn":43},{"ruleId":"161","severity":1,"message":"204","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":25},{"ruleId":"161","severity":1,"message":"205","line":5,"column":3,"nodeType":"163","messageId":"164","endLine":5,"endColumn":13},{"ruleId":"161","severity":1,"message":"196","line":6,"column":3,"nodeType":"163","messageId":"164","endLine":6,"endColumn":17},{"ruleId":"161","severity":1,"message":"197","line":7,"column":3,"nodeType":"163","messageId":"164","endLine":7,"endColumn":14},{"ruleId":"161","severity":1,"message":"206","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":14},{"ruleId":"161","severity":1,"message":"198","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":15},{"ruleId":"161","severity":1,"message":"199","line":10,"column":3,"nodeType":"163","messageId":"164","endLine":10,"endColumn":15},{"ruleId":"161","severity":1,"message":"207","line":11,"column":3,"nodeType":"163","messageId":"164","endLine":11,"endColumn":15},{"ruleId":"161","severity":1,"message":"208","line":12,"column":3,"nodeType":"163","messageId":"164","endLine":12,"endColumn":9},{"ruleId":"161","severity":1,"message":"209","line":13,"column":3,"nodeType":"163","messageId":"164","endLine":13,"endColumn":13},{"ruleId":"161","severity":1,"message":"210","line":14,"column":3,"nodeType":"163","messageId":"164","endLine":14,"endColumn":9},{"ruleId":"200","severity":1,"message":"201","line":30,"column":5,"nodeType":"202","messageId":"203","endLine":41,"endColumn":6},{"ruleId":"161","severity":1,"message":"178","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"167","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":22},{"ruleId":"161","severity":1,"message":"211","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":15},{"ruleId":"161","severity":1,"message":"212","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"213","line":4,"column":16,"nodeType":"163","messageId":"164","endLine":4,"endColumn":23},{"ruleId":"161","severity":1,"message":"214","line":5,"column":24,"nodeType":"163","messageId":"164","endLine":5,"endColumn":44},{"ruleId":"161","severity":1,"message":"215","line":5,"column":59,"nodeType":"163","messageId":"164","endLine":5,"endColumn":73},{"ruleId":"161","severity":1,"message":"178","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"167","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":22},{"ruleId":"161","severity":1,"message":"211","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":15},{"ruleId":"161","severity":1,"message":"212","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"213","line":4,"column":16,"nodeType":"163","messageId":"164","endLine":4,"endColumn":23},{"ruleId":"161","severity":1,"message":"214","line":8,"column":3,"nodeType":"163","messageId":"164","endLine":8,"endColumn":23},{"ruleId":"161","severity":1,"message":"216","line":9,"column":3,"nodeType":"163","messageId":"164","endLine":9,"endColumn":25},{"ruleId":"161","severity":1,"message":"178","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"167","line":2,"column":16,"nodeType":"163","messageId":"164","endLine":2,"endColumn":22},{"ruleId":"161","severity":1,"message":"211","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":15},{"ruleId":"161","severity":1,"message":"212","line":4,"column":10,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"213","line":4,"column":16,"nodeType":"163","messageId":"164","endLine":4,"endColumn":23},{"ruleId":"161","severity":1,"message":"214","line":5,"column":24,"nodeType":"163","messageId":"164","endLine":5,"endColumn":44},{"ruleId":"161","severity":1,"message":"217","line":5,"column":46,"nodeType":"163","messageId":"164","endLine":5,"endColumn":57},{"ruleId":"161","severity":1,"message":"218","line":5,"column":59,"nodeType":"163","messageId":"164","endLine":5,"endColumn":74},{"ruleId":"161","severity":1,"message":"219","line":12,"column":10,"nodeType":"163","messageId":"164","endLine":12,"endColumn":15},{"ruleId":"161","severity":1,"message":"220","line":12,"column":17,"nodeType":"163","messageId":"164","endLine":12,"endColumn":25},{"ruleId":"161","severity":1,"message":"221","line":14,"column":9,"nodeType":"163","messageId":"164","endLine":14,"endColumn":24},{"ruleId":"161","severity":1,"message":"167","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":16},{"ruleId":"161","severity":1,"message":"178","line":2,"column":18,"nodeType":"163","messageId":"164","endLine":2,"endColumn":22},{"ruleId":"161","severity":1,"message":"222","line":6,"column":7,"nodeType":"163","messageId":"164","endLine":6,"endColumn":12},{"ruleId":"223","severity":1,"message":"224","line":53,"column":1,"nodeType":"225","endLine":285,"endColumn":3},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavbarBrand' is defined but never used.","'Badge' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Card' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'Container' is defined but never used.","'ButtonGroup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'messagesEndRef'. Either include it or remove the dependency array.","ArrayExpression",["228"],"'serverStatus' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'props.server' and 'setServerStatus'. Either include them or remove the dependency array. If 'setNewMessage' needs the current value of 'props.server', you can also switch to useReducer instead of useState and read 'props.server' in the reducer.",["229"],"React Hook React.useEffect has missing dependencies: 'configuration', 'dataList', 'processData', 'setConfiguration', and 'setDataList'. Either include them or remove the dependency array.",["230"],"'faNetworkWired' is defined but never used.","'faChartArea' is defined but never used.","'faFolderOpen' is defined but never used.","'faInfoCircle' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'FontAwesomeIcon' is defined but never used.","'faTerminal' is defined but never used.","'faChartLine' is defined but never used.","'faWaveSquare' is defined but never used.","'faStop' is defined but never used.","'faChartBar' is defined but never used.","'faList' is defined but never used.","'Chart' is defined but never used.","'Line' is defined but never used.","'Scatter' is defined but never used.","'VictoryZoomContainer' is defined but never used.","'VictoryScatter' is defined but never used.","'VictoryCursorContainer' is defined but never used.","'VictoryLine' is defined but never used.","'VictorHistogram' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","'temperatureData' is assigned a value but never used.","'label' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [content, messagesEndRef]",{"range":"237","text":"238"},"Update the dependencies array to be: [props.server, setServerStatus]",{"range":"239","text":"240"},"Update the dependencies array to be: [configuration, dataList, incoming, processData, setConfiguration, setDataList]",{"range":"241","text":"242"},[404,413],"[content, messagesEndRef]",[2752,2754],"[props.server, setServerStatus]",[3739,3749],"[configuration, dataList, incoming, processData, setConfiguration, setDataList]"]